---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: workspaces.auto.pulumi.com
spec:
  group: auto.pulumi.com
  names:
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.address
      name: Address
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Workspace is the Schema for the workspaces API
          A Workspace is an execution context containing a single Pulumi project, a program, and multiple stacks.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WorkspaceSpec defines the desired state of Workspace
            properties:
              env:
                description: List of environment variables to set in the container.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvVar'
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              envFrom:
                description: |-
                  List of sources to populate environment variables in the workspace.
                  The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                  will be reported as an event when the container is starting. When a key exists in multiple
                  sources, the value associated with the last source will take precedence.
                  Values defined by an Env with a duplicate key will take precedence.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvFromSource'
                type: array
                x-kubernetes-list-type: atomic
              flux:
                description: Flux is the flux source containing the Pulumi program.
                properties:
                  digest:
                    description: Digest is the digest of the artifact to fetch.
                    type: string
                  dir:
                    description: |-
                      Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of
                      interest, within the fetched artifact.
                    type: string
                  url:
                    description: URL is the URL of the artifact to fetch.
                    type: string
                type: object
              git:
                description: Git is the git source containing the Pulumi program.
                properties:
                  auth:
                    description: |-
                      Auth contains optional authentication information to use when cloning
                      the repository.
                    properties:
                      password:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecretKeySelector'
                        description: The password that pairs with a username or as
                          part of an SSH Private Key.
                      sshPrivateKey:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecretKeySelector'
                        description: |-
                          SSHPrivateKey should contain a private key for access to the git repo.
                          When using `SSHPrivateKey`, the URL of the repository must be in the
                          format git@github.com:org/repository.git.
                      token:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecretKeySelector'
                        description: |-
                          Token is a Git personal access token in replacement of
                          your password.
                      username:
                        $ref: '#/definitions/k8s.io~1api~1core~1v1~0SecretKeySelector'
                        description: Username is the username to use when authenticating
                          to a git repository.
                    type: object
                  dir:
                    description: |-
                      Dir is the directory to work from in the project's source repository
                      where Pulumi.yaml is located. It is used in case Pulumi.yaml is not
                      in the project source root.
                    type: string
                  ref:
                    description: Ref is the git ref (tag, branch, or commit SHA) to
                      fetch.
                    type: string
                  shallow:
                    description: |-
                      Shallow controls whether the workspace uses a shallow clone or whether
                      all history is cloned.
                    type: boolean
                  url:
                    description: |-
                      URL is the git source control repository from which we fetch the project
                      code and configuration.
                    type: string
                type: object
              image:
                description: |-
                  Image is the container image containing the 'pulumi' executable. If no image is provided,
                  the default image is used based on the securityProfile:
                  for 'baseline', it defaults to 'pulumi/pulumi:latest';
                  for 'restricted', it defaults to 'pulumi/pulumi:latest-nonroot'.
                type: string
              imagePullPolicy:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0PullPolicy'
                description: |-
                  Image pull policy.
                  One of Always, Never, IfNotPresent.
                  Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                  More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
              podTemplate:
                description: PodTemplate defines a PodTemplateSpec for Workspace's
                  pods.
                properties:
                  metadata:
                    description: EmbeddedMetadata contains metadata relevant to an
                      embedded resource.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    $ref: '#/definitions/k8s.io~1api~1core~1v1~0PodSpec'
                    description: |-
                      Specification of the desired behavior of the pod.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                type: object
              resources:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0ResourceRequirements'
                description: |-
                  Compute Resources required by this workspace.
                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
              securityProfile:
                default: restricted
                description: |-
                  SecurityProfile applies a security profile to the workspace.
                  The restricted profile (default) runs the pod as a non-root user and with a security context that conforms with
                  the Restricted policy of the Pod Security Standards.
                  The baseline profile runs the pod as the root user and with a security context that conforms with
                  the Baseline policy of the Pod Security Standards.
                type: string
              serviceAccountName:
                default: default
                description: ServiceAccountName is the Kubernetes service account
                  identity of the workspace.
                type: string
              stacks:
                description: List of stacks this workspace manages.
                items:
                  properties:
                    config:
                      description: Config is a list of confguration values to set
                        on the stack.
                      items:
                        properties:
                          key:
                            description: Key is the configuration key or path to set.
                            type: string
                          path:
                            description: The key contains a path to a property in
                              a map or list to set
                            type: boolean
                          secret:
                            description: Secret marks the configuration value as a
                              secret.
                            type: boolean
                          value:
                            description: Value is the configuration value to set.
                            type: string
                          valueFrom:
                            description: ValueFrom is a reference to a value from
                              the environment or from a file.
                            properties:
                              env:
                                description: Env is an environment variable in the
                                  pulumi container to use as the value.
                                type: string
                              path:
                                description: Path is a path to a file in the pulumi
                                  container containing the value.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                      x-kubernetes-list-map-keys:
                      - key
                      x-kubernetes-list-type: map
                    create:
                      description: Create the stack if it does not exist.
                      type: boolean
                    name:
                      type: string
                    secretsProvider:
                      description: SecretsProvider is the name of the secret provider
                        to use for the stack.
                      type: string
                  required:
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
          status:
            description: WorkspaceStatus defines the observed state of Workspace
            properties:
              address:
                type: string
              conditions:
                description: |-
                  Represents the observations of a workspace's current state.
                  Known .status.conditions.type are: "Ready"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: observedGeneration represents the .metadata.generation
                  that the status was set based upon.
                format: int64
                minimum: 0
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
