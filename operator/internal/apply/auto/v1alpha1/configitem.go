// Copyright 2016-2025, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
)

// ConfigItemApplyConfiguration represents a declarative configuration of the ConfigItem type for use
// with apply.
type ConfigItemApplyConfiguration struct {
	Key       *string                            `json:"key,omitempty"`
	Path      *bool                              `json:"path,omitempty"`
	Value     *v1.JSON                           `json:"value,omitempty"`
	ValueFrom *ConfigValueFromApplyConfiguration `json:"valueFrom,omitempty"`
	Secret    *bool                              `json:"secret,omitempty"`
}

// ConfigItemApplyConfiguration constructs a declarative configuration of the ConfigItem type for use with
// apply.
func ConfigItem() *ConfigItemApplyConfiguration {
	return &ConfigItemApplyConfiguration{}
}

// WithKey sets the Key field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Key field is set to the value of the last call.
func (b *ConfigItemApplyConfiguration) WithKey(value string) *ConfigItemApplyConfiguration {
	b.Key = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *ConfigItemApplyConfiguration) WithPath(value bool) *ConfigItemApplyConfiguration {
	b.Path = &value
	return b
}

// WithValue sets the Value field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Value field is set to the value of the last call.
func (b *ConfigItemApplyConfiguration) WithValue(value v1.JSON) *ConfigItemApplyConfiguration {
	b.Value = &value
	return b
}

// WithValueFrom sets the ValueFrom field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ValueFrom field is set to the value of the last call.
func (b *ConfigItemApplyConfiguration) WithValueFrom(value *ConfigValueFromApplyConfiguration) *ConfigItemApplyConfiguration {
	b.ValueFrom = value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *ConfigItemApplyConfiguration) WithSecret(value bool) *ConfigItemApplyConfiguration {
	b.Secret = &value
	return b
}
