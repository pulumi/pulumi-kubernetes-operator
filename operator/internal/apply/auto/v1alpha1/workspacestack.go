/*
Copyright 2024, Pulumi Corporation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// WorkspaceStackApplyConfiguration represents a declarative configuration of the WorkspaceStack type for use
// with apply.
type WorkspaceStackApplyConfiguration struct {
	Name            *string                        `json:"name,omitempty"`
	Create          *bool                          `json:"create,omitempty"`
	SecretsProvider *string                        `json:"secretsProvider,omitempty"`
	Config          []ConfigItemApplyConfiguration `json:"config,omitempty"`
}

// WorkspaceStackApplyConfiguration constructs a declarative configuration of the WorkspaceStack type for use with
// apply.
func WorkspaceStack() *WorkspaceStackApplyConfiguration {
	return &WorkspaceStackApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *WorkspaceStackApplyConfiguration) WithName(value string) *WorkspaceStackApplyConfiguration {
	b.Name = &value
	return b
}

// WithCreate sets the Create field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Create field is set to the value of the last call.
func (b *WorkspaceStackApplyConfiguration) WithCreate(value bool) *WorkspaceStackApplyConfiguration {
	b.Create = &value
	return b
}

// WithSecretsProvider sets the SecretsProvider field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretsProvider field is set to the value of the last call.
func (b *WorkspaceStackApplyConfiguration) WithSecretsProvider(value string) *WorkspaceStackApplyConfiguration {
	b.SecretsProvider = &value
	return b
}

// WithConfig adds the given value to the Config field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Config field.
func (b *WorkspaceStackApplyConfiguration) WithConfig(values ...*ConfigItemApplyConfiguration) *WorkspaceStackApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConfig")
		}
		b.Config = append(b.Config, *values[i])
	}
	return b
}
