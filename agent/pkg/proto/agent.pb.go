// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: agent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WhoAmIRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhoAmIRequest) Reset() {
	*x = WhoAmIRequest{}
	mi := &file_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhoAmIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIRequest) ProtoMessage() {}

func (x *WhoAmIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIRequest.ProtoReflect.Descriptor instead.
func (*WhoAmIRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

// WhoAmIResult contains detailed information about the currently logged-in
// Pulumi identity.
type WhoAmIResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Organizations []string               `protobuf:"bytes,2,rep,name=organizations,proto3" json:"organizations,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhoAmIResult) Reset() {
	*x = WhoAmIResult{}
	mi := &file_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhoAmIResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAmIResult) ProtoMessage() {}

func (x *WhoAmIResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAmIResult.ProtoReflect.Descriptor instead.
func (*WhoAmIResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *WhoAmIResult) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *WhoAmIResult) GetOrganizations() []string {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *WhoAmIResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SelectStackRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StackName       string                 `protobuf:"bytes,1,opt,name=stack_name,json=stackName,proto3" json:"stack_name,omitempty"`
	Create          *bool                  `protobuf:"varint,2,opt,name=create,proto3,oneof" json:"create,omitempty"`
	SecretsProvider *string                `protobuf:"bytes,3,opt,name=secrets_provider,json=secretsProvider,proto3,oneof" json:"secrets_provider,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SelectStackRequest) Reset() {
	*x = SelectStackRequest{}
	mi := &file_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectStackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectStackRequest) ProtoMessage() {}

func (x *SelectStackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectStackRequest.ProtoReflect.Descriptor instead.
func (*SelectStackRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *SelectStackRequest) GetStackName() string {
	if x != nil {
		return x.StackName
	}
	return ""
}

func (x *SelectStackRequest) GetCreate() bool {
	if x != nil && x.Create != nil {
		return *x.Create
	}
	return false
}

func (x *SelectStackRequest) GetSecretsProvider() string {
	if x != nil && x.SecretsProvider != nil {
		return *x.SecretsProvider
	}
	return ""
}

type SelectStackResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       *StackSummary          `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectStackResult) Reset() {
	*x = SelectStackResult{}
	mi := &file_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectStackResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectStackResult) ProtoMessage() {}

func (x *SelectStackResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectStackResult.ProtoReflect.Descriptor instead.
func (*SelectStackResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *SelectStackResult) GetSummary() *StackSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type InfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	mi := &file_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

type InfoResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       *StackSummary          `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResult) Reset() {
	*x = InfoResult{}
	mi := &file_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResult) ProtoMessage() {}

func (x *InfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResult.ProtoReflect.Descriptor instead.
func (*InfoResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *InfoResult) GetSummary() *StackSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// StackSummary is a description of a stack and its current status.
type StackSummary struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LastUpdate       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	UpdateInProgress bool                   `protobuf:"varint,3,opt,name=update_in_progress,json=updateInProgress,proto3" json:"update_in_progress,omitempty"`
	ResourceCount    *int32                 `protobuf:"varint,4,opt,name=resource_count,json=resourceCount,proto3,oneof" json:"resource_count,omitempty"`
	Url              *string                `protobuf:"bytes,5,opt,name=url,proto3,oneof" json:"url,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StackSummary) Reset() {
	*x = StackSummary{}
	mi := &file_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StackSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackSummary) ProtoMessage() {}

func (x *StackSummary) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackSummary.ProtoReflect.Descriptor instead.
func (*StackSummary) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *StackSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StackSummary) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

func (x *StackSummary) GetUpdateInProgress() bool {
	if x != nil {
		return x.UpdateInProgress
	}
	return false
}

func (x *StackSummary) GetResourceCount() int32 {
	if x != nil && x.ResourceCount != nil {
		return *x.ResourceCount
	}
	return 0
}

func (x *StackSummary) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type SetAllConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        []*ConfigItem          `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty"` // The config items to add to the configuration.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAllConfigRequest) Reset() {
	*x = SetAllConfigRequest{}
	mi := &file_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAllConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAllConfigRequest) ProtoMessage() {}

func (x *SetAllConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAllConfigRequest.ProtoReflect.Descriptor instead.
func (*SetAllConfigRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *SetAllConfigRequest) GetConfig() []*ConfigItem {
	if x != nil {
		return x.Config
	}
	return nil
}

type ConfigItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`          // The config's key.
	Path  *bool                  `protobuf:"varint,2,opt,name=path,proto3,oneof" json:"path,omitempty"` // Parse the key as a paths in a map or list rather than as a raw string.
	// Types that are valid to be assigned to V:
	//
	//	*ConfigItem_Value
	//	*ConfigItem_ValueFrom
	V             isConfigItem_V `protobuf_oneof:"v"`
	Secret        *bool          `protobuf:"varint,5,opt,name=secret,proto3,oneof" json:"secret,omitempty"` // Whether the config is a secret.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItem) Reset() {
	*x = ConfigItem{}
	mi := &file_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItem) ProtoMessage() {}

func (x *ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItem.ProtoReflect.Descriptor instead.
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigItem) GetPath() bool {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return false
}

func (x *ConfigItem) GetV() isConfigItem_V {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *ConfigItem) GetValue() *structpb.Value {
	if x != nil {
		if x, ok := x.V.(*ConfigItem_Value); ok {
			return x.Value
		}
	}
	return nil
}

func (x *ConfigItem) GetValueFrom() *ConfigValueFrom {
	if x != nil {
		if x, ok := x.V.(*ConfigItem_ValueFrom); ok {
			return x.ValueFrom
		}
	}
	return nil
}

func (x *ConfigItem) GetSecret() bool {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return false
}

type isConfigItem_V interface {
	isConfigItem_V()
}

type ConfigItem_Value struct {
	Value *structpb.Value `protobuf:"bytes,3,opt,name=value,proto3,oneof"` // A literal value.
}

type ConfigItem_ValueFrom struct {
	ValueFrom *ConfigValueFrom `protobuf:"bytes,4,opt,name=value_from,json=valueFrom,proto3,oneof"` // A value read from the environment or local disk.
}

func (*ConfigItem_Value) isConfigItem_V() {}

func (*ConfigItem_ValueFrom) isConfigItem_V() {}

type ConfigValueFrom struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to F:
	//
	//	*ConfigValueFrom_Env
	//	*ConfigValueFrom_Path
	F             isConfigValueFrom_F `protobuf_oneof:"f"`
	Json          *bool               `protobuf:"varint,3,opt,name=json,proto3,oneof" json:"json,omitempty"` // Parse value as JSON
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigValueFrom) Reset() {
	*x = ConfigValueFrom{}
	mi := &file_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigValueFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigValueFrom) ProtoMessage() {}

func (x *ConfigValueFrom) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigValueFrom.ProtoReflect.Descriptor instead.
func (*ConfigValueFrom) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigValueFrom) GetF() isConfigValueFrom_F {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *ConfigValueFrom) GetEnv() string {
	if x != nil {
		if x, ok := x.F.(*ConfigValueFrom_Env); ok {
			return x.Env
		}
	}
	return ""
}

func (x *ConfigValueFrom) GetPath() string {
	if x != nil {
		if x, ok := x.F.(*ConfigValueFrom_Path); ok {
			return x.Path
		}
	}
	return ""
}

func (x *ConfigValueFrom) GetJson() bool {
	if x != nil && x.Json != nil {
		return *x.Json
	}
	return false
}

type isConfigValueFrom_F interface {
	isConfigValueFrom_F()
}

type ConfigValueFrom_Env struct {
	Env string `protobuf:"bytes,1,opt,name=env,proto3,oneof"` // The name of an environment variable to read>
}

type ConfigValueFrom_Path struct {
	Path string `protobuf:"bytes,2,opt,name=path,proto3,oneof"` // The path to a file to read.
}

func (*ConfigValueFrom_Env) isConfigValueFrom_F() {}

func (*ConfigValueFrom_Path) isConfigValueFrom_F() {}

type SetAllConfigResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAllConfigResult) Reset() {
	*x = SetAllConfigResult{}
	mi := &file_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAllConfigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAllConfigResult) ProtoMessage() {}

func (x *SetAllConfigResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAllConfigResult.ProtoReflect.Descriptor instead.
func (*SetAllConfigResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

type AddEnvironmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Environment   []string               `protobuf:"bytes,1,rep,name=environment,proto3" json:"environment,omitempty"` // The ESC environment(s) to add to the configuration.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEnvironmentsRequest) Reset() {
	*x = AddEnvironmentsRequest{}
	mi := &file_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEnvironmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEnvironmentsRequest) ProtoMessage() {}

func (x *AddEnvironmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEnvironmentsRequest.ProtoReflect.Descriptor instead.
func (*AddEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{11}
}

func (x *AddEnvironmentsRequest) GetEnvironment() []string {
	if x != nil {
		return x.Environment
	}
	return nil
}

type AddEnvironmentsResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEnvironmentsResult) Reset() {
	*x = AddEnvironmentsResult{}
	mi := &file_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEnvironmentsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEnvironmentsResult) ProtoMessage() {}

func (x *AddEnvironmentsResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEnvironmentsResult.ProtoReflect.Descriptor instead.
func (*AddEnvironmentsResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{12}
}

type InstallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallRequest) Reset() {
	*x = InstallRequest{}
	mi := &file_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRequest) ProtoMessage() {}

func (x *InstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRequest.ProtoReflect.Descriptor instead.
func (*InstallRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{13}
}

type InstallResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallResult) Reset() {
	*x = InstallResult{}
	mi := &file_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallResult) ProtoMessage() {}

func (x *InstallResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallResult.ProtoReflect.Descriptor instead.
func (*InstallResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{14}
}

type RefreshRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// parallel is the number of resource operations to run in parallel at once
	// (1 for no parallelism). Defaults to unbounded. (default 2147483647)
	Parallel *int32 `protobuf:"varint,1,opt,name=parallel,proto3,oneof" json:"parallel,omitempty"`
	// message (optional) to associate with the preview operation
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// Return an error if any changes occur during this refresh
	ExpectNoChanges *bool `protobuf:"varint,3,opt,name=expect_no_changes,json=expectNoChanges,proto3,oneof" json:"expect_no_changes,omitempty"`
	// Specify an exclusive list of resource URNs to refresh
	Target []string `protobuf:"bytes,4,rep,name=target,proto3" json:"target,omitempty"`
	// preview_only when true performs a non-destructive refresh (does not update state)
	PreviewOnly   *bool `protobuf:"varint,5,opt,name=preview_only,json=previewOnly,proto3,oneof" json:"preview_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshRequest) Reset() {
	*x = RefreshRequest{}
	mi := &file_agent_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRequest) ProtoMessage() {}

func (x *RefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRequest.ProtoReflect.Descriptor instead.
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{15}
}

func (x *RefreshRequest) GetParallel() int32 {
	if x != nil && x.Parallel != nil {
		return *x.Parallel
	}
	return 0
}

func (x *RefreshRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *RefreshRequest) GetExpectNoChanges() bool {
	if x != nil && x.ExpectNoChanges != nil {
		return *x.ExpectNoChanges
	}
	return false
}

func (x *RefreshRequest) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *RefreshRequest) GetPreviewOnly() bool {
	if x != nil && x.PreviewOnly != nil {
		return *x.PreviewOnly
	}
	return false
}

type RefreshStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*RefreshStream_Event
	//	*RefreshStream_Result
	Response      isRefreshStream_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshStream) Reset() {
	*x = RefreshStream{}
	mi := &file_agent_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshStream) ProtoMessage() {}

func (x *RefreshStream) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshStream.ProtoReflect.Descriptor instead.
func (*RefreshStream) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{16}
}

func (x *RefreshStream) GetResponse() isRefreshStream_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RefreshStream) GetEvent() *structpb.Struct {
	if x != nil {
		if x, ok := x.Response.(*RefreshStream_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *RefreshStream) GetResult() *RefreshResult {
	if x != nil {
		if x, ok := x.Response.(*RefreshStream_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isRefreshStream_Response interface {
	isRefreshStream_Response()
}

type RefreshStream_Event struct {
	// describes a Pulumi engine event, such as a change to a resource or
	// diagnostic message.
	Event *structpb.Struct `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type RefreshStream_Result struct {
	Result *RefreshResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*RefreshStream_Event) isRefreshStream_Response() {}

func (*RefreshStream_Result) isRefreshStream_Response() {}

type RefreshResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Summary       *UpdateSummary         `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Permalink     *string                `protobuf:"bytes,4,opt,name=permalink,proto3,oneof" json:"permalink,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshResult) Reset() {
	*x = RefreshResult{}
	mi := &file_agent_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResult) ProtoMessage() {}

func (x *RefreshResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResult.ProtoReflect.Descriptor instead.
func (*RefreshResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{17}
}

func (x *RefreshResult) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *RefreshResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *RefreshResult) GetSummary() *UpdateSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *RefreshResult) GetPermalink() string {
	if x != nil && x.Permalink != nil {
		return *x.Permalink
	}
	return ""
}

type PreviewRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Parallel is the number of resource operations to run in parallel at once
	// (1 for no parallelism). Defaults to unbounded. (default 2147483647)
	Parallel *int32 `protobuf:"varint,1,opt,name=parallel,proto3,oneof" json:"parallel,omitempty"`
	// Message (optional) to associate with the preview operation
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// Return an error if any changes occur during this preview
	ExpectNoChanges *bool `protobuf:"varint,3,opt,name=expect_no_changes,json=expectNoChanges,proto3,oneof" json:"expect_no_changes,omitempty"`
	// Specify resources to replace
	Replace []string `protobuf:"bytes,4,rep,name=replace,proto3" json:"replace,omitempty"`
	// Specify an exclusive list of resource URNs to update
	Target []string `protobuf:"bytes,5,rep,name=target,proto3" json:"target,omitempty"`
	// Allows updating of dependent targets discovered but not specified in the
	// Target list
	TargetDependents *bool `protobuf:"varint,6,opt,name=target_dependents,json=targetDependents,proto3,oneof" json:"target_dependents,omitempty"`
	// Run one or more policy packs as part of this update
	PolicyPack []*PolicyPack `protobuf:"bytes,7,rep,name=policy_pack,json=policyPack,proto3" json:"policy_pack,omitempty"`
	// Refresh will run a refresh before the preview.
	Refresh       *bool `protobuf:"varint,8,opt,name=refresh,proto3,oneof" json:"refresh,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewRequest) Reset() {
	*x = PreviewRequest{}
	mi := &file_agent_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewRequest) ProtoMessage() {}

func (x *PreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewRequest.ProtoReflect.Descriptor instead.
func (*PreviewRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{18}
}

func (x *PreviewRequest) GetParallel() int32 {
	if x != nil && x.Parallel != nil {
		return *x.Parallel
	}
	return 0
}

func (x *PreviewRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *PreviewRequest) GetExpectNoChanges() bool {
	if x != nil && x.ExpectNoChanges != nil {
		return *x.ExpectNoChanges
	}
	return false
}

func (x *PreviewRequest) GetReplace() []string {
	if x != nil {
		return x.Replace
	}
	return nil
}

func (x *PreviewRequest) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *PreviewRequest) GetTargetDependents() bool {
	if x != nil && x.TargetDependents != nil {
		return *x.TargetDependents
	}
	return false
}

func (x *PreviewRequest) GetPolicyPack() []*PolicyPack {
	if x != nil {
		return x.PolicyPack
	}
	return nil
}

func (x *PreviewRequest) GetRefresh() bool {
	if x != nil && x.Refresh != nil {
		return *x.Refresh
	}
	return false
}

type PolicyPack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyPack) Reset() {
	*x = PolicyPack{}
	mi := &file_agent_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyPack) ProtoMessage() {}

func (x *PolicyPack) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyPack.ProtoReflect.Descriptor instead.
func (*PolicyPack) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{19}
}

func (x *PolicyPack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PreviewStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*PreviewStream_Event
	//	*PreviewStream_Result
	Response      isPreviewStream_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewStream) Reset() {
	*x = PreviewStream{}
	mi := &file_agent_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewStream) ProtoMessage() {}

func (x *PreviewStream) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewStream.ProtoReflect.Descriptor instead.
func (*PreviewStream) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{20}
}

func (x *PreviewStream) GetResponse() isPreviewStream_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *PreviewStream) GetEvent() *structpb.Struct {
	if x != nil {
		if x, ok := x.Response.(*PreviewStream_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *PreviewStream) GetResult() *PreviewResult {
	if x != nil {
		if x, ok := x.Response.(*PreviewStream_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isPreviewStream_Response interface {
	isPreviewStream_Response()
}

type PreviewStream_Event struct {
	// describes a Pulumi engine event, such as a change to a resource or
	// diagnostic message.
	Event *structpb.Struct `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type PreviewStream_Result struct {
	Result *PreviewResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*PreviewStream_Event) isPreviewStream_Response() {}

func (*PreviewStream_Result) isPreviewStream_Response() {}

type PreviewResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Summary       *UpdateSummary         `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Permalink     *string                `protobuf:"bytes,4,opt,name=permalink,proto3,oneof" json:"permalink,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewResult) Reset() {
	*x = PreviewResult{}
	mi := &file_agent_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewResult) ProtoMessage() {}

func (x *PreviewResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewResult.ProtoReflect.Descriptor instead.
func (*PreviewResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{21}
}

func (x *PreviewResult) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *PreviewResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *PreviewResult) GetSummary() *UpdateSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *PreviewResult) GetPermalink() string {
	if x != nil && x.Permalink != nil {
		return *x.Permalink
	}
	return ""
}

type UpRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// parallel is the number of resource operations to run in parallel at once
	// (1 for no parallelism). Defaults to unbounded. (default 2147483647)
	Parallel *int32 `protobuf:"varint,1,opt,name=parallel,proto3,oneof" json:"parallel,omitempty"`
	// message (optional) to associate with the preview operation
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// Return an error if any changes occur during this update
	ExpectNoChanges *bool `protobuf:"varint,3,opt,name=expect_no_changes,json=expectNoChanges,proto3,oneof" json:"expect_no_changes,omitempty"`
	// Specify resources to replace
	Replace []string `protobuf:"bytes,4,rep,name=replace,proto3" json:"replace,omitempty"`
	// Specify an exclusive list of resource URNs to update
	Target []string `protobuf:"bytes,5,rep,name=target,proto3" json:"target,omitempty"`
	// target_dependents allows updating of dependent targets discovered but not
	// specified in the Target list
	TargetDependents *bool `protobuf:"varint,6,opt,name=target_dependents,json=targetDependents,proto3,oneof" json:"target_dependents,omitempty"`
	// // Use the update plan at the given path.
	// optional string plan = 7;
	// Run one or more policy packs as part of this update.
	PolicyPack []*PolicyPack `protobuf:"bytes,8,rep,name=policy_pack,json=policyPack,proto3" json:"policy_pack,omitempty"`
	// refresh will run a refresh before the update.
	Refresh *bool `protobuf:"varint,9,opt,name=refresh,proto3,oneof" json:"refresh,omitempty"`
	// continue_on_error will continue to perform the update operation despite the
	// occurrence of errors.
	ContinueOnError *bool `protobuf:"varint,10,opt,name=continue_on_error,json=continueOnError,proto3,oneof" json:"continue_on_error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpRequest) Reset() {
	*x = UpRequest{}
	mi := &file_agent_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpRequest) ProtoMessage() {}

func (x *UpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpRequest.ProtoReflect.Descriptor instead.
func (*UpRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{22}
}

func (x *UpRequest) GetParallel() int32 {
	if x != nil && x.Parallel != nil {
		return *x.Parallel
	}
	return 0
}

func (x *UpRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *UpRequest) GetExpectNoChanges() bool {
	if x != nil && x.ExpectNoChanges != nil {
		return *x.ExpectNoChanges
	}
	return false
}

func (x *UpRequest) GetReplace() []string {
	if x != nil {
		return x.Replace
	}
	return nil
}

func (x *UpRequest) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *UpRequest) GetTargetDependents() bool {
	if x != nil && x.TargetDependents != nil {
		return *x.TargetDependents
	}
	return false
}

func (x *UpRequest) GetPolicyPack() []*PolicyPack {
	if x != nil {
		return x.PolicyPack
	}
	return nil
}

func (x *UpRequest) GetRefresh() bool {
	if x != nil && x.Refresh != nil {
		return *x.Refresh
	}
	return false
}

func (x *UpRequest) GetContinueOnError() bool {
	if x != nil && x.ContinueOnError != nil {
		return *x.ContinueOnError
	}
	return false
}

type UpStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*UpStream_Event
	//	*UpStream_Result
	Response      isUpStream_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpStream) Reset() {
	*x = UpStream{}
	mi := &file_agent_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpStream) ProtoMessage() {}

func (x *UpStream) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpStream.ProtoReflect.Descriptor instead.
func (*UpStream) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{23}
}

func (x *UpStream) GetResponse() isUpStream_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *UpStream) GetEvent() *structpb.Struct {
	if x != nil {
		if x, ok := x.Response.(*UpStream_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *UpStream) GetResult() *UpResult {
	if x != nil {
		if x, ok := x.Response.(*UpStream_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isUpStream_Response interface {
	isUpStream_Response()
}

type UpStream_Event struct {
	// describes a Pulumi engine event, such as a change to a resource or
	// diagnostic message.
	Event *structpb.Struct `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type UpStream_Result struct {
	Result *UpResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*UpStream_Event) isUpStream_Response() {}

func (*UpStream_Result) isUpStream_Response() {}

type UpResult struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Stdout        string                  `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                  `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Summary       *UpdateSummary          `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Permalink     *string                 `protobuf:"bytes,4,opt,name=permalink,proto3,oneof" json:"permalink,omitempty"`
	Outputs       map[string]*OutputValue `protobuf:"bytes,5,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpResult) Reset() {
	*x = UpResult{}
	mi := &file_agent_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpResult) ProtoMessage() {}

func (x *UpResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpResult.ProtoReflect.Descriptor instead.
func (*UpResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{24}
}

func (x *UpResult) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *UpResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *UpResult) GetSummary() *UpdateSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *UpResult) GetPermalink() string {
	if x != nil && x.Permalink != nil {
		return *x.Permalink
	}
	return ""
}

func (x *UpResult) GetOutputs() map[string]*OutputValue {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type OutputValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Secret        bool                   `protobuf:"varint,2,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutputValue) Reset() {
	*x = OutputValue{}
	mi := &file_agent_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutputValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputValue) ProtoMessage() {}

func (x *OutputValue) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputValue.ProtoReflect.Descriptor instead.
func (*OutputValue) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{25}
}

func (x *OutputValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *OutputValue) GetSecret() bool {
	if x != nil {
		return x.Secret
	}
	return false
}

type UpdateSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Result        string                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSummary) Reset() {
	*x = UpdateSummary{}
	mi := &file_agent_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSummary) ProtoMessage() {}

func (x *UpdateSummary) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSummary.ProtoReflect.Descriptor instead.
func (*UpdateSummary) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateSummary) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateSummary) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateSummary) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *UpdateSummary) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DestroyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Parallel is the number of resource operations to run in parallel at once
	// (1 for no parallelism). Defaults to unbounded. (default 2147483647)
	Parallel *int32 `protobuf:"varint,1,opt,name=parallel,proto3,oneof" json:"parallel,omitempty"`
	// Message (optional) to associate with the destroy operation
	Message *string `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	// Specify an exclusive list of resource URNs to destroy
	Target []string `protobuf:"bytes,3,rep,name=target,proto3" json:"target,omitempty"`
	// Allows updating of dependent targets discovered but not specified in the
	// Target list
	TargetDependents *bool `protobuf:"varint,4,opt,name=target_dependents,json=targetDependents,proto3,oneof" json:"target_dependents,omitempty"`
	// Refresh will run a refresh before the destroy.
	Refresh *bool `protobuf:"varint,5,opt,name=refresh,proto3,oneof" json:"refresh,omitempty"`
	// continue_on_error will continue to perform the update operation despite the
	// occurrence of errors.
	ContinueOnError *bool `protobuf:"varint,6,opt,name=continue_on_error,json=continueOnError,proto3,oneof" json:"continue_on_error,omitempty"`
	// Remove the stack and its configuration after all resources in the stack
	// have been deleted.
	Remove        *bool `protobuf:"varint,7,opt,name=remove,proto3,oneof" json:"remove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyRequest) Reset() {
	*x = DestroyRequest{}
	mi := &file_agent_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyRequest) ProtoMessage() {}

func (x *DestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyRequest.ProtoReflect.Descriptor instead.
func (*DestroyRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{27}
}

func (x *DestroyRequest) GetParallel() int32 {
	if x != nil && x.Parallel != nil {
		return *x.Parallel
	}
	return 0
}

func (x *DestroyRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *DestroyRequest) GetTarget() []string {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *DestroyRequest) GetTargetDependents() bool {
	if x != nil && x.TargetDependents != nil {
		return *x.TargetDependents
	}
	return false
}

func (x *DestroyRequest) GetRefresh() bool {
	if x != nil && x.Refresh != nil {
		return *x.Refresh
	}
	return false
}

func (x *DestroyRequest) GetContinueOnError() bool {
	if x != nil && x.ContinueOnError != nil {
		return *x.ContinueOnError
	}
	return false
}

func (x *DestroyRequest) GetRemove() bool {
	if x != nil && x.Remove != nil {
		return *x.Remove
	}
	return false
}

type DestroyStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*DestroyStream_Event
	//	*DestroyStream_Result
	Response      isDestroyStream_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyStream) Reset() {
	*x = DestroyStream{}
	mi := &file_agent_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyStream) ProtoMessage() {}

func (x *DestroyStream) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyStream.ProtoReflect.Descriptor instead.
func (*DestroyStream) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{28}
}

func (x *DestroyStream) GetResponse() isDestroyStream_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *DestroyStream) GetEvent() *structpb.Struct {
	if x != nil {
		if x, ok := x.Response.(*DestroyStream_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *DestroyStream) GetResult() *DestroyResult {
	if x != nil {
		if x, ok := x.Response.(*DestroyStream_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isDestroyStream_Response interface {
	isDestroyStream_Response()
}

type DestroyStream_Event struct {
	// describes a Pulumi engine event, such as a change to a resource or
	// diagnostic message.
	Event *structpb.Struct `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type DestroyStream_Result struct {
	Result *DestroyResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*DestroyStream_Event) isDestroyStream_Response() {}

func (*DestroyStream_Result) isDestroyStream_Response() {}

type DestroyResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Summary       *UpdateSummary         `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Permalink     *string                `protobuf:"bytes,4,opt,name=permalink,proto3,oneof" json:"permalink,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyResult) Reset() {
	*x = DestroyResult{}
	mi := &file_agent_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyResult) ProtoMessage() {}

func (x *DestroyResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyResult.ProtoReflect.Descriptor instead.
func (*DestroyResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{29}
}

func (x *DestroyResult) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *DestroyResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *DestroyResult) GetSummary() *UpdateSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *DestroyResult) GetPermalink() string {
	if x != nil && x.Permalink != nil {
		return *x.Permalink
	}
	return ""
}

// Describes the cause of the error from Pulumi CLI with structured details.
type PulumiErrorInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PulumiErrorInfo) Reset() {
	*x = PulumiErrorInfo{}
	mi := &file_agent_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulumiErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiErrorInfo) ProtoMessage() {}

func (x *PulumiErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiErrorInfo.ProtoReflect.Descriptor instead.
func (*PulumiErrorInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{30}
}

func (x *PulumiErrorInfo) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PulumiErrorInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PulumiErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PulumiVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PulumiVersionRequest) Reset() {
	*x = PulumiVersionRequest{}
	mi := &file_agent_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulumiVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiVersionRequest) ProtoMessage() {}

func (x *PulumiVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiVersionRequest.ProtoReflect.Descriptor instead.
func (*PulumiVersionRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{31}
}

type PulumiVersionResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"` // e.g., "v3.200.0"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PulumiVersionResult) Reset() {
	*x = PulumiVersionResult{}
	mi := &file_agent_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulumiVersionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiVersionResult) ProtoMessage() {}

func (x *PulumiVersionResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiVersionResult.ProtoReflect.Descriptor instead.
func (*PulumiVersionResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{32}
}

func (x *PulumiVersionResult) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_agent_proto protoreflect.FileDescriptor

var file_agent_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x0c, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0xa0, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x22, 0xeb, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72,
	0x6c, 0x22, 0x40, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x03, 0x0a, 0x01, 0x76, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x62, 0x0a, 0x0f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x12, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x6e, 0x76, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x04, 0x6a, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x03, 0x0a, 0x01, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3a, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a,
	0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x81,
	0x02, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0f,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x6c, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x22, 0x7c, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65,
	0x72, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69,
	0x6e, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c,
	0x69, 0x6e, 0x6b, 0x22, 0x89, 0x03, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x6c, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x02, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x11, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0b, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50,
	0x61, 0x63, 0x6b, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x12,
	0x1d, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x04, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x88, 0x01, 0x01, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22,
	0x20, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x7c, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72,
	0x72, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e,
	0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69,
	0x6e, 0x6b, 0x22, 0xcb, 0x03, 0x0a, 0x09, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0f, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03,
	0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0a, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x07, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x4f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x6f,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x72, 0x0a, 0x08, 0x55, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa3, 0x02, 0x0a, 0x08, 0x55, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72,
	0x72, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x3b, 0x0a, 0x0b, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe3, 0x02,
	0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65,
	0x4f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x6c, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f,
	0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x22, 0x7c, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c,
	0x69, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x61,
	0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x57, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x16, 0x0a,
	0x14, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xc3, 0x05, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x06,
	0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x12, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x57,
	0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x68, 0x6f, 0x41, 0x6d, 0x49, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x12, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x12, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x15, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x07, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2b, 0x0a, 0x02, 0x55, 0x70, 0x12, 0x10, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12,
	0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x4a, 0x0a, 0x0d, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d,
	0x69, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2d, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x32, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData []byte
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)))
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_agent_proto_goTypes = []any{
	(*WhoAmIRequest)(nil),          // 0: agent.WhoAmIRequest
	(*WhoAmIResult)(nil),           // 1: agent.WhoAmIResult
	(*SelectStackRequest)(nil),     // 2: agent.SelectStackRequest
	(*SelectStackResult)(nil),      // 3: agent.SelectStackResult
	(*InfoRequest)(nil),            // 4: agent.InfoRequest
	(*InfoResult)(nil),             // 5: agent.InfoResult
	(*StackSummary)(nil),           // 6: agent.StackSummary
	(*SetAllConfigRequest)(nil),    // 7: agent.SetAllConfigRequest
	(*ConfigItem)(nil),             // 8: agent.ConfigItem
	(*ConfigValueFrom)(nil),        // 9: agent.ConfigValueFrom
	(*SetAllConfigResult)(nil),     // 10: agent.SetAllConfigResult
	(*AddEnvironmentsRequest)(nil), // 11: agent.AddEnvironmentsRequest
	(*AddEnvironmentsResult)(nil),  // 12: agent.AddEnvironmentsResult
	(*InstallRequest)(nil),         // 13: agent.InstallRequest
	(*InstallResult)(nil),          // 14: agent.InstallResult
	(*RefreshRequest)(nil),         // 15: agent.RefreshRequest
	(*RefreshStream)(nil),          // 16: agent.RefreshStream
	(*RefreshResult)(nil),          // 17: agent.RefreshResult
	(*PreviewRequest)(nil),         // 18: agent.PreviewRequest
	(*PolicyPack)(nil),             // 19: agent.PolicyPack
	(*PreviewStream)(nil),          // 20: agent.PreviewStream
	(*PreviewResult)(nil),          // 21: agent.PreviewResult
	(*UpRequest)(nil),              // 22: agent.UpRequest
	(*UpStream)(nil),               // 23: agent.UpStream
	(*UpResult)(nil),               // 24: agent.UpResult
	(*OutputValue)(nil),            // 25: agent.OutputValue
	(*UpdateSummary)(nil),          // 26: agent.UpdateSummary
	(*DestroyRequest)(nil),         // 27: agent.DestroyRequest
	(*DestroyStream)(nil),          // 28: agent.DestroyStream
	(*DestroyResult)(nil),          // 29: agent.DestroyResult
	(*PulumiErrorInfo)(nil),        // 30: agent.PulumiErrorInfo
	(*PulumiVersionRequest)(nil),   // 31: agent.PulumiVersionRequest
	(*PulumiVersionResult)(nil),    // 32: agent.PulumiVersionResult
	nil,                            // 33: agent.UpResult.OutputsEntry
	(*timestamppb.Timestamp)(nil),  // 34: google.protobuf.Timestamp
	(*structpb.Value)(nil),         // 35: google.protobuf.Value
	(*structpb.Struct)(nil),        // 36: google.protobuf.Struct
}
var file_agent_proto_depIdxs = []int32{
	6,  // 0: agent.SelectStackResult.summary:type_name -> agent.StackSummary
	6,  // 1: agent.InfoResult.summary:type_name -> agent.StackSummary
	34, // 2: agent.StackSummary.last_update:type_name -> google.protobuf.Timestamp
	8,  // 3: agent.SetAllConfigRequest.config:type_name -> agent.ConfigItem
	35, // 4: agent.ConfigItem.value:type_name -> google.protobuf.Value
	9,  // 5: agent.ConfigItem.value_from:type_name -> agent.ConfigValueFrom
	36, // 6: agent.RefreshStream.event:type_name -> google.protobuf.Struct
	17, // 7: agent.RefreshStream.result:type_name -> agent.RefreshResult
	26, // 8: agent.RefreshResult.summary:type_name -> agent.UpdateSummary
	19, // 9: agent.PreviewRequest.policy_pack:type_name -> agent.PolicyPack
	36, // 10: agent.PreviewStream.event:type_name -> google.protobuf.Struct
	21, // 11: agent.PreviewStream.result:type_name -> agent.PreviewResult
	26, // 12: agent.PreviewResult.summary:type_name -> agent.UpdateSummary
	19, // 13: agent.UpRequest.policy_pack:type_name -> agent.PolicyPack
	36, // 14: agent.UpStream.event:type_name -> google.protobuf.Struct
	24, // 15: agent.UpStream.result:type_name -> agent.UpResult
	26, // 16: agent.UpResult.summary:type_name -> agent.UpdateSummary
	33, // 17: agent.UpResult.outputs:type_name -> agent.UpResult.OutputsEntry
	34, // 18: agent.UpdateSummary.start_time:type_name -> google.protobuf.Timestamp
	34, // 19: agent.UpdateSummary.end_time:type_name -> google.protobuf.Timestamp
	36, // 20: agent.DestroyStream.event:type_name -> google.protobuf.Struct
	29, // 21: agent.DestroyStream.result:type_name -> agent.DestroyResult
	26, // 22: agent.DestroyResult.summary:type_name -> agent.UpdateSummary
	25, // 23: agent.UpResult.OutputsEntry.value:type_name -> agent.OutputValue
	0,  // 24: agent.AutomationService.WhoAmI:input_type -> agent.WhoAmIRequest
	2,  // 25: agent.AutomationService.SelectStack:input_type -> agent.SelectStackRequest
	4,  // 26: agent.AutomationService.Info:input_type -> agent.InfoRequest
	7,  // 27: agent.AutomationService.SetAllConfig:input_type -> agent.SetAllConfigRequest
	11, // 28: agent.AutomationService.AddEnvironments:input_type -> agent.AddEnvironmentsRequest
	13, // 29: agent.AutomationService.Install:input_type -> agent.InstallRequest
	18, // 30: agent.AutomationService.Preview:input_type -> agent.PreviewRequest
	15, // 31: agent.AutomationService.Refresh:input_type -> agent.RefreshRequest
	22, // 32: agent.AutomationService.Up:input_type -> agent.UpRequest
	27, // 33: agent.AutomationService.Destroy:input_type -> agent.DestroyRequest
	31, // 34: agent.AutomationService.PulumiVersion:input_type -> agent.PulumiVersionRequest
	1,  // 35: agent.AutomationService.WhoAmI:output_type -> agent.WhoAmIResult
	3,  // 36: agent.AutomationService.SelectStack:output_type -> agent.SelectStackResult
	5,  // 37: agent.AutomationService.Info:output_type -> agent.InfoResult
	10, // 38: agent.AutomationService.SetAllConfig:output_type -> agent.SetAllConfigResult
	12, // 39: agent.AutomationService.AddEnvironments:output_type -> agent.AddEnvironmentsResult
	14, // 40: agent.AutomationService.Install:output_type -> agent.InstallResult
	20, // 41: agent.AutomationService.Preview:output_type -> agent.PreviewStream
	16, // 42: agent.AutomationService.Refresh:output_type -> agent.RefreshStream
	23, // 43: agent.AutomationService.Up:output_type -> agent.UpStream
	28, // 44: agent.AutomationService.Destroy:output_type -> agent.DestroyStream
	32, // 45: agent.AutomationService.PulumiVersion:output_type -> agent.PulumiVersionResult
	35, // [35:46] is the sub-list for method output_type
	24, // [24:35] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	file_agent_proto_msgTypes[2].OneofWrappers = []any{}
	file_agent_proto_msgTypes[6].OneofWrappers = []any{}
	file_agent_proto_msgTypes[8].OneofWrappers = []any{
		(*ConfigItem_Value)(nil),
		(*ConfigItem_ValueFrom)(nil),
	}
	file_agent_proto_msgTypes[9].OneofWrappers = []any{
		(*ConfigValueFrom_Env)(nil),
		(*ConfigValueFrom_Path)(nil),
	}
	file_agent_proto_msgTypes[15].OneofWrappers = []any{}
	file_agent_proto_msgTypes[16].OneofWrappers = []any{
		(*RefreshStream_Event)(nil),
		(*RefreshStream_Result)(nil),
	}
	file_agent_proto_msgTypes[17].OneofWrappers = []any{}
	file_agent_proto_msgTypes[18].OneofWrappers = []any{}
	file_agent_proto_msgTypes[20].OneofWrappers = []any{
		(*PreviewStream_Event)(nil),
		(*PreviewStream_Result)(nil),
	}
	file_agent_proto_msgTypes[21].OneofWrappers = []any{}
	file_agent_proto_msgTypes[22].OneofWrappers = []any{}
	file_agent_proto_msgTypes[23].OneofWrappers = []any{
		(*UpStream_Event)(nil),
		(*UpStream_Result)(nil),
	}
	file_agent_proto_msgTypes[24].OneofWrappers = []any{}
	file_agent_proto_msgTypes[27].OneofWrappers = []any{}
	file_agent_proto_msgTypes[28].OneofWrappers = []any{
		(*DestroyStream_Event)(nil),
		(*DestroyStream_Result)(nil),
	}
	file_agent_proto_msgTypes[29].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
