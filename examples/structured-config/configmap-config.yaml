---
# Example: Structured Configuration from ConfigMaps
#
# This example demonstrates loading structured configuration from ConfigMaps.
# This is useful when you want to manage config separately from the Stack resource,
# or when you want to share config across multiple stacks.
#
# Requirements:
# - Pulumi Kubernetes Operator v2.0.0+
# - Pulumi CLI v3.200.0+ in the workspace image

apiVersion: v1
kind: ServiceAccount
metadata:
  name: structured-config-configmap
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: structured-config-configmap:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: structured-config-configmap
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: structured-config-configmap
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: structured-config-configmap
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: default
data:
  # JSON string that will be parsed as an object
  settings.json: |
    {
      "apiEndpoint": "https://api.example.com",
      "version": "v2",
      "features": {
        "authentication": true,
        "rateLimit": 1000,
        "cors": {
          "allowedOrigins": ["https://app.example.com"],
          "allowedMethods": ["GET", "POST", "PUT", "DELETE"]
        }
      }
    }

  # Plain text value (not JSON)
  environment.txt: "production"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: feature-flags
  namespace: default
data:
  flags.json: |
    {
      "newUI": {
        "enabled": true,
        "rolloutPercentage": 75
      },
      "betaAPI": {
        "enabled": false,
        "rolloutPercentage": 0
      },
      "enhancedMetrics": {
        "enabled": true,
        "rolloutPercentage": 100
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: structured-config-configmap
  namespace: default
stringData:
  accessToken: xoxb-123-secret-token

---
apiVersion: pulumi.com/v1
kind: Stack
metadata:
  name: structured-config-configmap
  namespace: default
spec:
  serviceAccountName: structured-config-configmap

  # Use a Pulumi CLI image that supports JSON config (v3.200.0+)
  workspaceTemplate:
    spec:
      image: pulumi/pulumi:3.202.0-nonroot

  # Configure access to Pulumi Cloud
  envRefs:
    PULUMI_ACCESS_TOKEN:
      type: Secret
      secret:
        name: structured-config-configmap
        key: accessToken

  stack: <your-org>/aws-ts-s3-folder/dev
  projectRepo: https://github.com/pulumi/examples
  repoDir: aws-ts-s3-folder
  branch: refs/heads/master
  destroyOnFinalize: true

  # Inline config (string values)
  config:
    aws:region: us-west-2
    projectName: my-project

  # Configuration from ConfigMaps (NEW!)
  configRef:
    # Load JSON object from ConfigMap
    # The 'json: true' flag tells the operator to parse the value as JSON
    appSettings:
      name: app-config
      key: settings.json
      json: true

    # Load plain text as string (json: false or omitted)
    environment:
      name: app-config
      key: environment.txt
      # json: false (default)

    # Load another JSON object
    featureFlags:
      name: feature-flags
      key: flags.json
      json: true

  # Note: secretsRef does NOT support JSON values (Pulumi CLI limitation)
  # Secrets can only be strings
  secretsRef:
    apiKey:
      type: Secret
      secret:
        name: structured-config-configmap
        key: accessToken
