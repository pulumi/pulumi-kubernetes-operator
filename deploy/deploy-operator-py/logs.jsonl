{"method":"/pulumirpc.LanguageRuntime/GetPluginInfo","request":{},"response":{"version":"3.92.1-dev.0"},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
{"method":"/pulumirpc.LanguageRuntime/GetRequiredPlugins","request":{"project":"deploy-operator-py","pwd":"/Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py","program":"."},"response":{"plugins":[{"name":"kubernetes","kind":"resource","version":"v3.30.2"}]},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
{"method":"/pulumirpc.LanguageRuntime/GetPluginInfo","request":{},"response":{"version":"3.92.1-dev.0"},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
{"method":"/pulumirpc.ResourceMonitor/SupportsFeature","request":{"id":"aliasSpecs"},"response":{"hasSupport":true},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/GetPluginInfo","request":{},"response":{"version":"4.6.0-alpha.1699026141+77f09b30.dirty"},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/CheckConfig","request":{"urn":"urn:pulumi:dev::deploy-operator-py::pulumi:providers:kubernetes::default_3_30_2","olds":{},"news":{"version":"3.30.2"}},"response":{"inputs":{"version":"3.30.2"}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"pulumi:pulumi:Stack","name":"deploy-operator-py-dev","object":{},"acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi/runtime/stack.py","line":137}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","object":{}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:yaml:ConfigFile","name":"stackcrd","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","object":{},"acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/__main__.py","line":25}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::stackcrd","object":{}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Configure","request":{"args":{"version":"3.30.2"},"acceptSecrets":true,"acceptResources":true,"sendsOldInputs":true,"sendsOldInputsToDelete":true},"response":{"acceptSecrets":true,"supportsPreview":true},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: stacks.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Stack\n    listKind: StackList\n    plural: stacks\n    singular: stack\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    - jsonPath: .status.lastUpdate.state\n      name: State\n      type: string\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Stack is the Schema for the stacks API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              conditions:\n                items:\n                  description: \"Condition contains details for one aspect of the current\n                    state of this API Resource. --- This struct is intended for direct\n                    use as an array at the field path .status.conditions.  For example,\n                    type FooStatus struct{ // Represents the observations of a foo's\n                    current state. // Known .status.conditions.type are: \\\"Available\\\",\n                    \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge\n                    // +listType=map // +listMapKey=type Conditions []metav1.Condition\n                    `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\"\n                    protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\"\n                  properties:\n                    lastTransitionTime:\n                      description: lastTransitionTime is the last time the condition\n                        transitioned from one status to another. This should be when\n                        the underlying condition changed.  If that is not known, then\n                        using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n                      description: message is a human readable message indicating\n                        details about the transition. This may be an empty string.\n                      maxLength: 32768\n                      type: string\n                    observedGeneration:\n                      description: observedGeneration represents the .metadata.generation\n                        that the condition was set based upon. For instance, if .metadata.generation\n                        is currently 12, but the .status.conditions[x].observedGeneration\n                        is 9, the condition is out of date with respect to the current\n                        state of the instance.\n                      format: int64\n                      minimum: 0\n                      type: integer\n                    reason:\n                      description: reason contains a programmatic identifier indicating\n                        the reason for the condition's last transition. Producers\n                        of specific condition types may define expected values and\n                        meanings for this field, and whether the values are considered\n                        a guaranteed API. The value should be a CamelCase string.\n                        This field may not be empty.\n                      maxLength: 1024\n                      minLength: 1\n                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\n                      type: string\n                    status:\n                      description: status of the condition, one of True, False, Unknown.\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: type of condition in CamelCase or in foo.example.com/CamelCase.\n                        --- Many .condition.type values are consistent across resources\n                        like Available, but because arbitrary conditions can be useful\n                        (see .node.status.conditions), the ability to deconflict is\n                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n                      maxLength: 316\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\n                      type: string\n                  required:\n                  - lastTransitionTime\n                  - message\n                  - reason\n                  - status\n                  - type\n                  type: object\n                type: array\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              observedGeneration:\n                description: ObservedGeneration records the value of .meta.generation\n                  at the point the controller last processed this object\n                format: int64\n                type: integer\n              observedReconcileRequest:\n                description: ObservedReconcileRequest records the value of the annotation\n                  named for `ReconcileRequestAnnotation` when it was last seen.\n                type: string\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n  - name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: 'Stack is the Schema for the stacks API. Deprecated: Note Stacks\n          from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is\n          completely backward compatible. Users are strongly encouraged to switch\n          to pulumi.com/v1.'\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n"}},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: stacks.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Stack\n    listKind: StackList\n    plural: stacks\n    singular: stack\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    - jsonPath: .status.lastUpdate.state\n      name: State\n      type: string\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Stack is the Schema for the stacks API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              conditions:\n                items:\n                  description: \"Condition contains details for one aspect of the current\n                    state of this API Resource. --- This struct is intended for direct\n                    use as an array at the field path .status.conditions.  For example,\n                    type FooStatus struct{ // Represents the observations of a foo's\n                    current state. // Known .status.conditions.type are: \\\"Available\\\",\n                    \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge\n                    // +listType=map // +listMapKey=type Conditions []metav1.Condition\n                    `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\"\n                    protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\"\n                  properties:\n                    lastTransitionTime:\n                      description: lastTransitionTime is the last time the condition\n                        transitioned from one status to another. This should be when\n                        the underlying condition changed.  If that is not known, then\n                        using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n                      description: message is a human readable message indicating\n                        details about the transition. This may be an empty string.\n                      maxLength: 32768\n                      type: string\n                    observedGeneration:\n                      description: observedGeneration represents the .metadata.generation\n                        that the condition was set based upon. For instance, if .metadata.generation\n                        is currently 12, but the .status.conditions[x].observedGeneration\n                        is 9, the condition is out of date with respect to the current\n                        state of the instance.\n                      format: int64\n                      minimum: 0\n                      type: integer\n                    reason:\n                      description: reason contains a programmatic identifier indicating\n                        the reason for the condition's last transition. Producers\n                        of specific condition types may define expected values and\n                        meanings for this field, and whether the values are considered\n                        a guaranteed API. The value should be a CamelCase string.\n                        This field may not be empty.\n                      maxLength: 1024\n                      minLength: 1\n                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\n                      type: string\n                    status:\n                      description: status of the condition, one of True, False, Unknown.\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: type of condition in CamelCase or in foo.example.com/CamelCase.\n                        --- Many .condition.type values are consistent across resources\n                        like Available, but because arbitrary conditions can be useful\n                        (see .node.status.conditions), the ability to deconflict is\n                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n                      maxLength: 316\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\n                      type: string\n                  required:\n                  - lastTransitionTime\n                  - message\n                  - reason\n                  - status\n                  - type\n                  type: object\n                type: array\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              observedGeneration:\n                description: ObservedGeneration records the value of .meta.generation\n                  at the point the controller last processed this object\n                format: int64\n                type: integer\n              observedReconcileRequest:\n                description: ObservedReconcileRequest records the value of the annotation\n                  named for `ReconcileRequestAnnotation` when it was last seen.\n                type: string\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n  - name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: 'Stack is the Schema for the stacks API. Deprecated: Note Stacks\n          from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is\n          completely backward compatible. Users are strongly encouraged to switch\n          to pulumi.com/v1.'\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n"},"version":"3.30.2","acceptResources":true},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: programs.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Program\n    listKind: ProgramList\n    plural: programs\n    singular: program\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Program is the schema for the inline YAML program API.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          program:\n            properties:\n              configuration:\n                additionalProperties:\n                  properties:\n                    default:\n                      description: default is a value of the appropriate type for\n                        the template to use if no value is specified.\n                      x-kubernetes-preserve-unknown-fields: true\n                    type:\n                      description: type is the (required) data type for the parameter.\n                      enum:\n                      - String\n                      - Number\n                      - List\u003cNumber\u003e\n                      - List\u003cString\u003e\n                      type: string\n                  type: object\n                description: configuration specifies the Pulumi config inputs to the\n                  deployment. Either type or default is required.\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: outputs specifies the Pulumi stack outputs of the program\n                  and how they are computed from the resources.\n                type: object\n              resources:\n                additionalProperties:\n                  properties:\n                    get:\n                      description: A getter function for the resource. Supplying get\n                        is mutually exclusive to properties.\n                      properties:\n                        id:\n                          description: The ID of the resource to import.\n                          minLength: 1\n                          type: string\n                        state:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: state contains the known properties (input\n                            \u0026 output) of the resource. This assists the provider in\n                            figuring out the correct resource.\n                          type: object\n                      required:\n                      - id\n                      type: object\n                    options:\n                      description: options contains all resource options supported\n                        by Pulumi.\n                      properties:\n                        additionalSecretOutputs:\n                          description: additionalSecretOutputs specifies properties\n                            that must be encrypted as secrets.\n                          items:\n                            type: string\n                          type: array\n                        aliases:\n                          description: aliases specifies names that this resource\n                            used to have, so that renaming or refactoring doesn’t\n                            replace it.\n                          items:\n                            type: string\n                          type: array\n                        customTimeouts:\n                          description: customTimeouts overrides the default retry/timeout\n                            behavior for resource provisioning.\n                          properties:\n                            create:\n                              description: create is the custom timeout for create\n                                operations.\n                              type: string\n                            delete:\n                              description: delete is the custom timeout for delete\n                                operations.\n                              type: string\n                            update:\n                              description: update is the custom timeout for update\n                                operations.\n                              type: string\n                          type: object\n                        deleteBeforeReplace:\n                          description: deleteBeforeReplace overrides the default create-before-delete\n                            behavior when replacing.\n                          type: boolean\n                        dependsOn:\n                          description: dependsOn adds explicit dependencies in addition\n                            to the ones in the dependency graph.\n                          items:\n                            x-kubernetes-preserve-unknown-fields: true\n                          type: array\n                        ignoreChanges:\n                          description: ignoreChanges declares that changes to certain\n                            properties should be ignored when diffing.\n                          items:\n                            type: string\n                          type: array\n                        import:\n                          description: import adopts an existing resource from your\n                            cloud account under the control of Pulumi.\n                          type: string\n                        parent:\n                          description: parent resource option specifies a parent for\n                            a resource. It is used to associate children with the\n                            parents that encapsulate or are responsible for them.\n                          x-kubernetes-preserve-unknown-fields: true\n                        protect:\n                          description: protect prevents accidental deletion of a resource.\n                          type: boolean\n                        provider:\n                          description: provider resource option sets a provider for\n                            the resource.\n                          x-kubernetes-preserve-unknown-fields: true\n                        providers:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: providers resource option sets a map of providers\n                            for the resource and its children.\n                          type: object\n                        version:\n                          description: version specifies a provider plugin version\n                            that should be used when operating on a resource.\n                          type: string\n                      type: object\n                    properties:\n                      additionalProperties:\n                        x-kubernetes-preserve-unknown-fields: true\n                      description: properties contains the primary resource-specific\n                        keys and values to initialize the resource state.\n                      type: object\n                    type:\n                      description: type is the Pulumi type token for this resource.\n                      minLength: 1\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: resources declares the Pulumi resources that will be\n                  deployed and managed by the program.\n                type: object\n              variables:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: variables specifies intermediate values of the program;\n                  the values of variables are expressions that can be re-used.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n"}},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: programs.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Program\n    listKind: ProgramList\n    plural: programs\n    singular: program\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Program is the schema for the inline YAML program API.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          program:\n            properties:\n              configuration:\n                additionalProperties:\n                  properties:\n                    default:\n                      description: default is a value of the appropriate type for\n                        the template to use if no value is specified.\n                      x-kubernetes-preserve-unknown-fields: true\n                    type:\n                      description: type is the (required) data type for the parameter.\n                      enum:\n                      - String\n                      - Number\n                      - List\u003cNumber\u003e\n                      - List\u003cString\u003e\n                      type: string\n                  type: object\n                description: configuration specifies the Pulumi config inputs to the\n                  deployment. Either type or default is required.\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: outputs specifies the Pulumi stack outputs of the program\n                  and how they are computed from the resources.\n                type: object\n              resources:\n                additionalProperties:\n                  properties:\n                    get:\n                      description: A getter function for the resource. Supplying get\n                        is mutually exclusive to properties.\n                      properties:\n                        id:\n                          description: The ID of the resource to import.\n                          minLength: 1\n                          type: string\n                        state:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: state contains the known properties (input\n                            \u0026 output) of the resource. This assists the provider in\n                            figuring out the correct resource.\n                          type: object\n                      required:\n                      - id\n                      type: object\n                    options:\n                      description: options contains all resource options supported\n                        by Pulumi.\n                      properties:\n                        additionalSecretOutputs:\n                          description: additionalSecretOutputs specifies properties\n                            that must be encrypted as secrets.\n                          items:\n                            type: string\n                          type: array\n                        aliases:\n                          description: aliases specifies names that this resource\n                            used to have, so that renaming or refactoring doesn’t\n                            replace it.\n                          items:\n                            type: string\n                          type: array\n                        customTimeouts:\n                          description: customTimeouts overrides the default retry/timeout\n                            behavior for resource provisioning.\n                          properties:\n                            create:\n                              description: create is the custom timeout for create\n                                operations.\n                              type: string\n                            delete:\n                              description: delete is the custom timeout for delete\n                                operations.\n                              type: string\n                            update:\n                              description: update is the custom timeout for update\n                                operations.\n                              type: string\n                          type: object\n                        deleteBeforeReplace:\n                          description: deleteBeforeReplace overrides the default create-before-delete\n                            behavior when replacing.\n                          type: boolean\n                        dependsOn:\n                          description: dependsOn adds explicit dependencies in addition\n                            to the ones in the dependency graph.\n                          items:\n                            x-kubernetes-preserve-unknown-fields: true\n                          type: array\n                        ignoreChanges:\n                          description: ignoreChanges declares that changes to certain\n                            properties should be ignored when diffing.\n                          items:\n                            type: string\n                          type: array\n                        import:\n                          description: import adopts an existing resource from your\n                            cloud account under the control of Pulumi.\n                          type: string\n                        parent:\n                          description: parent resource option specifies a parent for\n                            a resource. It is used to associate children with the\n                            parents that encapsulate or are responsible for them.\n                          x-kubernetes-preserve-unknown-fields: true\n                        protect:\n                          description: protect prevents accidental deletion of a resource.\n                          type: boolean\n                        provider:\n                          description: provider resource option sets a provider for\n                            the resource.\n                          x-kubernetes-preserve-unknown-fields: true\n                        providers:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: providers resource option sets a map of providers\n                            for the resource and its children.\n                          type: object\n                        version:\n                          description: version specifies a provider plugin version\n                            that should be used when operating on a resource.\n                          type: string\n                      type: object\n                    properties:\n                      additionalProperties:\n                        x-kubernetes-preserve-unknown-fields: true\n                      description: properties contains the primary resource-specific\n                        keys and values to initialize the resource state.\n                      type: object\n                    type:\n                      description: type is the Pulumi type token for this resource.\n                      minLength: 1\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: resources declares the Pulumi resources that will be\n                  deployed and managed by the program.\n                type: object\n              variables:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: variables specifies intermediate values of the program;\n                  the values of variables are expressions that can be re-used.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n"},"version":"3.30.2","acceptResources":true},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResourceOutputs","request":{"urn":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","outputs":{}},"response":{},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:yaml:ConfigFile","name":"programcrd","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","object":{},"acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/__main__.py","line":29}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::programcrd","object":{}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/SupportsFeature","request":{"id":"resourceReferences"},"response":{"hasSupport":true},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","olds":{},"news":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"namespace":"default"}},"randomSeed":"/0uRTC/Ve7PBkLpmr/iGXhy+tN2FlAQGfWCzM5i+X1I="},"response":{"inputs":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-4be883b6","namespace":"default"}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default","olds":{},"news":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"randomSeed":"mc7AxSRh695nfFEqWCParj74E85QE2Iw+fWuJXvkXb8="},"response":{"inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-437c4827","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","olds":{},"news":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"randomSeed":"67y1NkUwnqOWQ5A135tXbpS6DAUpQxf+1Nun3JCp0YE="},"response":{"inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com","olds":{},"news":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"randomSeed":"AGFsgp/S/QGQfD5RjBPl7R06LpnWAL/8L+TvtMkS7tw="},"response":{"inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","properties":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-4be883b6","namespace":"default"}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-077521d3","__initialApiVersion":"v1","__inputs":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-4be883b6","namespace":"default"}},"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:12Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}}},"manager":"pulumi-kubernetes-077521d3","operation":"Apply","time":"2023-11-09T19:01:12Z"}],"name":"operator-service-account-default-4be883b6","namespace":"default","uid":"5ca0c6dc-833a-4509-9737-22b67d45cc2e"}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default","properties":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-437c4827","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-4cbd6dde","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-437c4827","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:12Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:rules":{}},"manager":"pulumi-kubernetes-4cbd6dde","operation":"Apply","time":"2023-11-09T19:01:12Z"}],"name":"operator-role-default-437c4827","namespace":"default","uid":"4de1d2c6-f9ee-4331-ac81-cd351555d183"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:core/v1:ServiceAccount","name":"operator-service-account-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"namespace":"default"}},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/core/v1/ServiceAccount.py","line":164}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","object":{"__fieldManager":"pulumi-kubernetes-077521d3","__initialApiVersion":"v1","__inputs":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-4be883b6","namespace":"default"}},"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:12Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}}},"manager":"pulumi-kubernetes-077521d3","operation":"Apply","time":"2023-11-09T19:01:12Z"}],"name":"operator-service-account-default-4be883b6","namespace":"default","uid":"5ca0c6dc-833a-4509-9737-22b67d45cc2e"}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:rbac.authorization.k8s.io/v1:Role","name":"operator-role-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"rules":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1alpha1:Role","parentUrn":""}},{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1beta1:Role","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/rbac/v1/Role.py","line":128}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default","object":{"__fieldManager":"pulumi-kubernetes-4cbd6dde","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-437c4827","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:12Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:rules":{}},"manager":"pulumi-kubernetes-4cbd6dde","operation":"Apply","time":"2023-11-09T19:01:12Z"}],"name":"operator-role-default-437c4827","namespace":"default","uid":"4de1d2c6-f9ee-4331-ac81-cd351555d183"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com","properties":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-65713fee","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"programs.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Program\",\"listKind\":\"ProgramList\",\"plural\":\"programs\",\"singular\":\"program\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Program is the schema for the inline YAML program API.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"program\":{\"properties\":{\"configuration\":{\"additionalProperties\":{\"properties\":{\"default\":{\"description\":\"default is a value of the appropriate type for the template to use if no value is specified.\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":{\"description\":\"type is the (required) data type for the parameter.\",\"enum\":[\"String\",\"Number\",\"List\\u003cNumber\\u003e\",\"List\\u003cString\\u003e\"],\"type\":\"string\"}},\"type\":\"object\"},\"description\":\"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.\",\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.\",\"type\":\"object\"},\"resources\":{\"additionalProperties\":{\"properties\":{\"get\":{\"description\":\"A getter function for the resource. Supplying get is mutually exclusive to properties.\",\"properties\":{\"id\":{\"description\":\"The ID of the resource to import.\",\"minLength\":1,\"type\":\"string\"},\"state\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"state contains the known properties (input \\u0026 output) of the resource. This assists the provider in figuring out the correct resource.\",\"type\":\"object\"}},\"required\":[\"id\"],\"type\":\"object\"},\"options\":{\"description\":\"options contains all resource options supported by Pulumi.\",\"properties\":{\"additionalSecretOutputs\":{\"description\":\"additionalSecretOutputs specifies properties that must be encrypted as secrets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"aliases\":{\"description\":\"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"customTimeouts\":{\"description\":\"customTimeouts overrides the default retry/timeout behavior for resource provisioning.\",\"properties\":{\"create\":{\"description\":\"create is the custom timeout for create operations.\",\"type\":\"string\"},\"delete\":{\"description\":\"delete is the custom timeout for delete operations.\",\"type\":\"string\"},\"update\":{\"description\":\"update is the custom timeout for update operations.\",\"type\":\"string\"}},\"type\":\"object\"},\"deleteBeforeReplace\":{\"description\":\"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.\",\"type\":\"boolean\"},\"dependsOn\":{\"description\":\"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.\",\"items\":{\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"ignoreChanges\":{\"description\":\"ignoreChanges declares that changes to certain properties should be ignored when diffing.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"import\":{\"description\":\"import adopts an existing resource from your cloud account under the control of Pulumi.\",\"type\":\"string\"},\"parent\":{\"description\":\"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.\",\"x-kubernetes-preserve-unknown-fields\":true},\"protect\":{\"description\":\"protect prevents accidental deletion of a resource.\",\"type\":\"boolean\"},\"provider\":{\"description\":\"provider resource option sets a provider for the resource.\",\"x-kubernetes-preserve-unknown-fields\":true},\"providers\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"providers resource option sets a map of providers for the resource and its children.\",\"type\":\"object\"},\"version\":{\"description\":\"version specifies a provider plugin version that should be used when operating on a resource.\",\"type\":\"string\"}},\"type\":\"object\"},\"properties\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"properties contains the primary resource-specific keys and values to initialize the resource state.\",\"type\":\"object\"},\"type\":{\"description\":\"type is the Pulumi type token for this resource.\",\"minLength\":1,\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"resources declares the Pulumi resources that will be deployed and managed by the program.\",\"type\":\"object\"},\"variables\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-65713fee","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"programs.pulumi.com","resourceVersion":"148781","uid":"713b3034-b3e9-4510-8266-35f3f87d8d7b"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition","name":"programs.pulumi.com","parent":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::programcrd","custom":true,"object":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"spec":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/apiextensions/v1/CustomResourceDefinition.py","line":127}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com","object":{"__fieldManager":"pulumi-kubernetes-65713fee","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"programs.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Program\",\"listKind\":\"ProgramList\",\"plural\":\"programs\",\"singular\":\"program\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Program is the schema for the inline YAML program API.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"program\":{\"properties\":{\"configuration\":{\"additionalProperties\":{\"properties\":{\"default\":{\"description\":\"default is a value of the appropriate type for the template to use if no value is specified.\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":{\"description\":\"type is the (required) data type for the parameter.\",\"enum\":[\"String\",\"Number\",\"List\\u003cNumber\\u003e\",\"List\\u003cString\\u003e\"],\"type\":\"string\"}},\"type\":\"object\"},\"description\":\"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.\",\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.\",\"type\":\"object\"},\"resources\":{\"additionalProperties\":{\"properties\":{\"get\":{\"description\":\"A getter function for the resource. Supplying get is mutually exclusive to properties.\",\"properties\":{\"id\":{\"description\":\"The ID of the resource to import.\",\"minLength\":1,\"type\":\"string\"},\"state\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"state contains the known properties (input \\u0026 output) of the resource. This assists the provider in figuring out the correct resource.\",\"type\":\"object\"}},\"required\":[\"id\"],\"type\":\"object\"},\"options\":{\"description\":\"options contains all resource options supported by Pulumi.\",\"properties\":{\"additionalSecretOutputs\":{\"description\":\"additionalSecretOutputs specifies properties that must be encrypted as secrets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"aliases\":{\"description\":\"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"customTimeouts\":{\"description\":\"customTimeouts overrides the default retry/timeout behavior for resource provisioning.\",\"properties\":{\"create\":{\"description\":\"create is the custom timeout for create operations.\",\"type\":\"string\"},\"delete\":{\"description\":\"delete is the custom timeout for delete operations.\",\"type\":\"string\"},\"update\":{\"description\":\"update is the custom timeout for update operations.\",\"type\":\"string\"}},\"type\":\"object\"},\"deleteBeforeReplace\":{\"description\":\"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.\",\"type\":\"boolean\"},\"dependsOn\":{\"description\":\"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.\",\"items\":{\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"ignoreChanges\":{\"description\":\"ignoreChanges declares that changes to certain properties should be ignored when diffing.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"import\":{\"description\":\"import adopts an existing resource from your cloud account under the control of Pulumi.\",\"type\":\"string\"},\"parent\":{\"description\":\"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.\",\"x-kubernetes-preserve-unknown-fields\":true},\"protect\":{\"description\":\"protect prevents accidental deletion of a resource.\",\"type\":\"boolean\"},\"provider\":{\"description\":\"provider resource option sets a provider for the resource.\",\"x-kubernetes-preserve-unknown-fields\":true},\"providers\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"providers resource option sets a map of providers for the resource and its children.\",\"type\":\"object\"},\"version\":{\"description\":\"version specifies a provider plugin version that should be used when operating on a resource.\",\"type\":\"string\"}},\"type\":\"object\"},\"properties\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"properties contains the primary resource-specific keys and values to initialize the resource state.\",\"type\":\"object\"},\"type\":{\"description\":\"type is the Pulumi type token for this resource.\",\"minLength\":1,\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"resources declares the Pulumi resources that will be deployed and managed by the program.\",\"type\":\"object\"},\"variables\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-65713fee","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"programs.pulumi.com","resourceVersion":"148781","uid":"713b3034-b3e9-4510-8266-35f3f87d8d7b"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResourceOutputs","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::programcrd","outputs":{"resources":{"apiextensions.k8s.io/v1/CustomResourceDefinition:programs.pulumi.com":{"4dabf18193072939515e22adb298388d":"5cf8f73096256a8f31e491e813e4eb8e","id":"04da6b54-80e4-46f7-96ec-b56ff0331ba9","urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com"}}}},"response":{},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::operator-role-binding-default","olds":{},"news":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]},"randomSeed":"YKEWDb7Y+NW2LARpWapdNQgkBgugvDBKuCM1U3xuN/A="},"response":{"inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-7e0c0626","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::operator-role-binding-default","properties":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-7e0c0626","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-6d644669","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-7e0c0626","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:12Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:roleRef":{},"f:subjects":{}},"manager":"pulumi-kubernetes-6d644669","operation":"Apply","time":"2023-11-09T19:01:12Z"}],"name":"operator-role-binding-default-7e0c0626","namespace":"default","uid":"2d142e15-5d1c-4018-92ec-9713d0c20cf1"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:rbac.authorization.k8s.io/v1:RoleBinding","name":"operator-role-binding-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]},"dependencies":["urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default"],"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"roleRef":{"urns":["urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default"]},"subjects":{"urns":["urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default"]}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleBinding","parentUrn":""}},{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1beta1:RoleBinding","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/rbac/v1/RoleBinding.py","line":145}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::operator-role-binding-default","object":{"__fieldManager":"pulumi-kubernetes-6d644669","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-7e0c0626","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:12Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:roleRef":{},"f:subjects":{}},"manager":"pulumi-kubernetes-6d644669","operation":"Apply","time":"2023-11-09T19:01:12Z"}],"name":"operator-role-binding-default-7e0c0626","namespace":"default","uid":"2d142e15-5d1c-4018-92ec-9713d0c20cf1"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-437c4827"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-4be883b6"}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","properties":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-de7b416a","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"stacks.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Stack\",\"listKind\":\"StackList\",\"plural\":\"stacks\",\"singular\":\"stack\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"},{\"jsonPath\":\".status.lastUpdate.state\",\"name\":\"State\",\"type\":\"string\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"conditions\":{\"items\":{\"description\":\"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \\\"Available\\\", \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\" protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\",\"properties\":{\"lastTransitionTime\":{\"description\":\"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\",\"format\":\"date-time\",\"type\":\"string\"},\"message\":{\"description\":\"message is a human readable message indicating details about the transition. This may be an empty string.\",\"maxLength\":32768,\"type\":\"string\"},\"observedGeneration\":{\"description\":\"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.\",\"format\":\"int64\",\"minimum\":0,\"type\":\"integer\"},\"reason\":{\"description\":\"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.\",\"maxLength\":1024,\"minLength\":1,\"pattern\":\"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\",\"type\":\"string\"},\"status\":{\"description\":\"status of the condition, one of True, False, Unknown.\",\"enum\":[\"True\",\"False\",\"Unknown\"],\"type\":\"string\"},\"type\":{\"description\":\"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\",\"maxLength\":316,\"pattern\":\"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\",\"type\":\"string\"}},\"required\":[\"lastTransitionTime\",\"message\",\"reason\",\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"},\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"observedGeneration\":{\"description\":\"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object\",\"format\":\"int64\",\"type\":\"integer\"},\"observedReconcileRequest\":{\"description\":\"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.\",\"type\":\"string\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-de7b416a","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"stacks.pulumi.com","resourceVersion":"148785","uid":"1bddb011-8f96-4eca-8eea-93c6e80711f5"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition","name":"stacks.pulumi.com","parent":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::stackcrd","custom":true,"object":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"spec":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/apiextensions/v1/CustomResourceDefinition.py","line":127}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","object":{"__fieldManager":"pulumi-kubernetes-de7b416a","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"stacks.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Stack\",\"listKind\":\"StackList\",\"plural\":\"stacks\",\"singular\":\"stack\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"},{\"jsonPath\":\".status.lastUpdate.state\",\"name\":\"State\",\"type\":\"string\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"conditions\":{\"items\":{\"description\":\"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \\\"Available\\\", \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\" protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\",\"properties\":{\"lastTransitionTime\":{\"description\":\"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\",\"format\":\"date-time\",\"type\":\"string\"},\"message\":{\"description\":\"message is a human readable message indicating details about the transition. This may be an empty string.\",\"maxLength\":32768,\"type\":\"string\"},\"observedGeneration\":{\"description\":\"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.\",\"format\":\"int64\",\"minimum\":0,\"type\":\"integer\"},\"reason\":{\"description\":\"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.\",\"maxLength\":1024,\"minLength\":1,\"pattern\":\"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\",\"type\":\"string\"},\"status\":{\"description\":\"status of the condition, one of True, False, Unknown.\",\"enum\":[\"True\",\"False\",\"Unknown\"],\"type\":\"string\"},\"type\":{\"description\":\"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\",\"maxLength\":316,\"pattern\":\"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\",\"type\":\"string\"}},\"required\":[\"lastTransitionTime\",\"message\",\"reason\",\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"},\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"observedGeneration\":{\"description\":\"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object\",\"format\":\"int64\",\"type\":\"integer\"},\"observedReconcileRequest\":{\"description\":\"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.\",\"type\":\"string\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-de7b416a","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"stacks.pulumi.com","resourceVersion":"148785","uid":"1bddb011-8f96-4eca-8eea-93c6e80711f5"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResourceOutputs","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::stackcrd","outputs":{"resources":{"apiextensions.k8s.io/v1/CustomResourceDefinition:stacks.pulumi.com":{"4dabf18193072939515e22adb298388d":"5cf8f73096256a8f31e491e813e4eb8e","id":"04da6b54-80e4-46f7-96ec-b56ff0331ba9","urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com"}}}},"response":{},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:apps/v1:Deployment::pulumi-kubernetes-operator-default","olds":{},"news":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-4be883b6"},"terminationGracePeriodSeconds":300}}},"randomSeed":"D7efVzaA2T5Iy4Qmo8Y+vgy2Ts/DgDiv09vENWd/W60="},"response":{"inputs":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-f176705a","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-4be883b6"}}}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:apps/v1:Deployment::pulumi-kubernetes-operator-default","properties":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-f176705a","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-4be883b6"}}}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-90696d5c","__initialApiVersion":"apps/v1","__inputs":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-f176705a","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-4be883b6"}}}},"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:13Z","generation":1,"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"pulumi-kubernetes-operator\"}":{".":{},"f:args":{},"f:command":{},"f:env":{"k:{\"name\":\"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"MAX_CONCURRENT_RECONCILES\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"OPERATOR_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}},"k:{\"name\":\"WATCH_NAMESPACE\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{}}},"f:serviceAccountName":{}}}}},"manager":"pulumi-kubernetes-90696d5c","operation":"Apply","time":"2023-11-09T19:01:13Z"}],"name":"pulumi-kubernetes-operator-default-f176705a","namespace":"default","uid":"348a63d2-17e5-454b-adb5-d2d03d4676ad"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"operator-service-account-default-4be883b6","serviceAccountName":"operator-service-account-default-4be883b6","terminationGracePeriodSeconds":30}}}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:apps/v1:Deployment","name":"pulumi-kubernetes-operator-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-4be883b6"},"terminationGracePeriodSeconds":300}}},"dependencies":["urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com"],"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"spec":{"urns":["urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default"]}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:apps/v1beta1:Deployment","parentUrn":""}},{"spec":{"type":"kubernetes:apps/v1beta2:Deployment","parentUrn":""}},{"spec":{"type":"kubernetes:extensions/v1beta1:Deployment","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/apps/v1/Deployment.py","line":323}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:apps/v1:Deployment::pulumi-kubernetes-operator-default","object":{"__fieldManager":"pulumi-kubernetes-90696d5c","__initialApiVersion":"apps/v1","__inputs":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-f176705a","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-4be883b6"}}}},"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-09T19:01:13Z","generation":1,"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"pulumi-kubernetes-operator\"}":{".":{},"f:args":{},"f:command":{},"f:env":{"k:{\"name\":\"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"MAX_CONCURRENT_RECONCILES\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"OPERATOR_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}},"k:{\"name\":\"WATCH_NAMESPACE\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{}}},"f:serviceAccountName":{}}}}},"manager":"pulumi-kubernetes-90696d5c","operation":"Apply","time":"2023-11-09T19:01:13Z"}],"name":"pulumi-kubernetes-operator-default-f176705a","namespace":"default","uid":"348a63d2-17e5-454b-adb5-d2d03d4676ad"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"operator-service-account-default-4be883b6","serviceAccountName":"operator-service-account-default-4be883b6","terminationGracePeriodSeconds":30}}}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.LanguageRuntime/Run","request":{"project":"deploy-operator-py","stack":"dev","pwd":"/Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py","program":".","dryRun":true,"parallel":2147483647,"monitorAddress":"127.0.0.1:51127","organization":"eron-pulumi-corp","configPropertyMap":{},"debug":true,"waitForAttach":true},"response":{},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
{"method":"/pulumirpc.LanguageRuntime/GetPluginInfo","request":{},"response":{"version":"3.92.1-dev.0"},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
{"method":"/pulumirpc.LanguageRuntime/GetRequiredPlugins","request":{"project":"deploy-operator-py","pwd":"/Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py","program":"."},"response":{"plugins":[{"name":"kubernetes","kind":"resource","version":"v3.30.2"}]},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
{"method":"/pulumirpc.LanguageRuntime/GetPluginInfo","request":{},"response":{"version":"3.92.1-dev.0"},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
{"method":"/pulumirpc.ResourceMonitor/SupportsFeature","request":{"id":"aliasSpecs"},"response":{"hasSupport":true},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/GetPluginInfo","request":{},"response":{"version":"4.6.0-alpha.1699026141+77f09b30.dirty"},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/CheckConfig","request":{"urn":"urn:pulumi:dev::deploy-operator-py::pulumi:providers:kubernetes::default_3_30_2","olds":{},"news":{"version":"3.30.2"}},"response":{"inputs":{"version":"3.30.2"}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"pulumi:pulumi:Stack","name":"deploy-operator-py-dev","object":{},"acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi/runtime/stack.py","line":137}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","object":{}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:yaml:ConfigFile","name":"stackcrd","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","object":{},"acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/__main__.py","line":21}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::stackcrd","object":{}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Configure","request":{"args":{"version":"3.30.2"},"acceptSecrets":true,"acceptResources":true,"sendsOldInputs":true,"sendsOldInputsToDelete":true},"response":{"acceptSecrets":true,"supportsPreview":true},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: stacks.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Stack\n    listKind: StackList\n    plural: stacks\n    singular: stack\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    - jsonPath: .status.lastUpdate.state\n      name: State\n      type: string\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Stack is the Schema for the stacks API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              conditions:\n                items:\n                  description: \"Condition contains details for one aspect of the current\n                    state of this API Resource. --- This struct is intended for direct\n                    use as an array at the field path .status.conditions.  For example,\n                    type FooStatus struct{ // Represents the observations of a foo's\n                    current state. // Known .status.conditions.type are: \\\"Available\\\",\n                    \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge\n                    // +listType=map // +listMapKey=type Conditions []metav1.Condition\n                    `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\"\n                    protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\"\n                  properties:\n                    lastTransitionTime:\n                      description: lastTransitionTime is the last time the condition\n                        transitioned from one status to another. This should be when\n                        the underlying condition changed.  If that is not known, then\n                        using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n                      description: message is a human readable message indicating\n                        details about the transition. This may be an empty string.\n                      maxLength: 32768\n                      type: string\n                    observedGeneration:\n                      description: observedGeneration represents the .metadata.generation\n                        that the condition was set based upon. For instance, if .metadata.generation\n                        is currently 12, but the .status.conditions[x].observedGeneration\n                        is 9, the condition is out of date with respect to the current\n                        state of the instance.\n                      format: int64\n                      minimum: 0\n                      type: integer\n                    reason:\n                      description: reason contains a programmatic identifier indicating\n                        the reason for the condition's last transition. Producers\n                        of specific condition types may define expected values and\n                        meanings for this field, and whether the values are considered\n                        a guaranteed API. The value should be a CamelCase string.\n                        This field may not be empty.\n                      maxLength: 1024\n                      minLength: 1\n                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\n                      type: string\n                    status:\n                      description: status of the condition, one of True, False, Unknown.\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: type of condition in CamelCase or in foo.example.com/CamelCase.\n                        --- Many .condition.type values are consistent across resources\n                        like Available, but because arbitrary conditions can be useful\n                        (see .node.status.conditions), the ability to deconflict is\n                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n                      maxLength: 316\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\n                      type: string\n                  required:\n                  - lastTransitionTime\n                  - message\n                  - reason\n                  - status\n                  - type\n                  type: object\n                type: array\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              observedGeneration:\n                description: ObservedGeneration records the value of .meta.generation\n                  at the point the controller last processed this object\n                format: int64\n                type: integer\n              observedReconcileRequest:\n                description: ObservedReconcileRequest records the value of the annotation\n                  named for `ReconcileRequestAnnotation` when it was last seen.\n                type: string\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n  - name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: 'Stack is the Schema for the stacks API. Deprecated: Note Stacks\n          from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is\n          completely backward compatible. Users are strongly encouraged to switch\n          to pulumi.com/v1.'\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n"}},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: stacks.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Stack\n    listKind: StackList\n    plural: stacks\n    singular: stack\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    - jsonPath: .status.lastUpdate.state\n      name: State\n      type: string\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Stack is the Schema for the stacks API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              conditions:\n                items:\n                  description: \"Condition contains details for one aspect of the current\n                    state of this API Resource. --- This struct is intended for direct\n                    use as an array at the field path .status.conditions.  For example,\n                    type FooStatus struct{ // Represents the observations of a foo's\n                    current state. // Known .status.conditions.type are: \\\"Available\\\",\n                    \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge\n                    // +listType=map // +listMapKey=type Conditions []metav1.Condition\n                    `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\"\n                    protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\"\n                  properties:\n                    lastTransitionTime:\n                      description: lastTransitionTime is the last time the condition\n                        transitioned from one status to another. This should be when\n                        the underlying condition changed.  If that is not known, then\n                        using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n                      description: message is a human readable message indicating\n                        details about the transition. This may be an empty string.\n                      maxLength: 32768\n                      type: string\n                    observedGeneration:\n                      description: observedGeneration represents the .metadata.generation\n                        that the condition was set based upon. For instance, if .metadata.generation\n                        is currently 12, but the .status.conditions[x].observedGeneration\n                        is 9, the condition is out of date with respect to the current\n                        state of the instance.\n                      format: int64\n                      minimum: 0\n                      type: integer\n                    reason:\n                      description: reason contains a programmatic identifier indicating\n                        the reason for the condition's last transition. Producers\n                        of specific condition types may define expected values and\n                        meanings for this field, and whether the values are considered\n                        a guaranteed API. The value should be a CamelCase string.\n                        This field may not be empty.\n                      maxLength: 1024\n                      minLength: 1\n                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\n                      type: string\n                    status:\n                      description: status of the condition, one of True, False, Unknown.\n                      enum:\n                      - \"True\"\n                      - \"False\"\n                      - Unknown\n                      type: string\n                    type:\n                      description: type of condition in CamelCase or in foo.example.com/CamelCase.\n                        --- Many .condition.type values are consistent across resources\n                        like Available, but because arbitrary conditions can be useful\n                        (see .node.status.conditions), the ability to deconflict is\n                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n                      maxLength: 316\n                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\n                      type: string\n                  required:\n                  - lastTransitionTime\n                  - message\n                  - reason\n                  - status\n                  - type\n                  type: object\n                type: array\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              observedGeneration:\n                description: ObservedGeneration records the value of .meta.generation\n                  at the point the controller last processed this object\n                format: int64\n                type: integer\n              observedReconcileRequest:\n                description: ObservedReconcileRequest records the value of the annotation\n                  named for `ReconcileRequestAnnotation` when it was last seen.\n                type: string\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n  - name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: 'Stack is the Schema for the stacks API. Deprecated: Note Stacks\n          from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is\n          completely backward compatible. Users are strongly encouraged to switch\n          to pulumi.com/v1.'\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: StackSpec defines the desired state of Pulumi Stack being\n              managed by this operator.\n            properties:\n              accessTokenSecret:\n                description: '(optional) AccessTokenSecret is the name of a Secret\n                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:\n                  use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN\n                  instead.'\n                type: string\n              backend:\n                description: '(optional) Backend is an optional backend URL to use\n                  for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\"\n                  (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\"\n                  \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e -\n                  AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e\n                  - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\"\n                  \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/'\n                type: string\n              branch:\n                description: (optional) Branch is the branch name to deploy, either\n                  the simple or fully qualified ref name, e.g. refs/heads/master.\n                  This is mutually exclusive with the Commit setting. Either value\n                  needs to be specified. When specified, the operator will periodically\n                  poll to check if the branch has any new commits. The frequency of\n                  the polling is configurable through ResyncFrequencySeconds, defaulting\n                  to every 60 seconds.\n                type: string\n              commit:\n                description: (optional) Commit is the hash of the commit to deploy.\n                  If used, HEAD will be in detached mode. This is mutually exclusive\n                  with the Branch setting. Either value needs to be specified.\n                type: string\n              config:\n                additionalProperties:\n                  type: string\n                description: (optional) Config is the configuration for this stack,\n                  which can be optionally specified inline. If this is omitted, configuration\n                  is assumed to be checked in and taken from the source repository.\n                type: object\n              continueResyncOnCommitMatch:\n                description: (optional) ContinueResyncOnCommitMatch - when true -\n                  informs the operator to continue trying to update stacks even if\n                  the revision of the source matches. This might be useful in environments\n                  where Pulumi programs have dynamic elements for example, calls to\n                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults\n                  to false, i.e. when a particular revision is successfully run, the\n                  operator will not attempt to rerun the program at that revision\n                  again.\n                type: boolean\n              destroyOnFinalize:\n                description: (optional) DestroyOnFinalize can be set to true to destroy\n                  the stack completely upon deletion of the Stack custom resource.\n                type: boolean\n              envRefs:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) EnvRefs is an optional map containing environment\n                  variables as keys and stores descriptors to where the variables'\n                  values should be loaded from (one of literal, environment variable,\n                  file on the filesystem, or Kubernetes Secret) as values.\n                type: object\n              envSecrets:\n                description: '(optional) SecretEnvs is an optional array of Secret\n                  names containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              envs:\n                description: '(optional) Envs is an optional array of config maps\n                  containing environment variables to set. Deprecated: use EnvRefs\n                  instead.'\n                items:\n                  type: string\n                type: array\n              expectNoRefreshChanges:\n                description: (optional) ExpectNoRefreshChanges can be set to true\n                  if a stack is not expected to have changes during a refresh before\n                  the update is run. This could occur, for example, is a resource's\n                  state is changing outside of Pulumi (e.g., metadata, timestamps).\n                type: boolean\n              fluxSource:\n                description: FluxSource specifies how to fetch source code from a\n                  Flux source object.\n                properties:\n                  dir:\n                    description: Dir gives the subdirectory containing the Pulumi\n                      project (i.e., containing Pulumi.yaml) of interest, within the\n                      fetched source.\n                    type: string\n                  sourceRef:\n                    properties:\n                      apiVersion:\n                        type: string\n                      kind:\n                        type: string\n                      name:\n                        type: string\n                    required:\n                    - apiVersion\n                    - kind\n                    - name\n                    type: object\n                required:\n                - sourceRef\n                type: object\n              gitAuth:\n                description: '(optional) GitAuth allows configuring git authentication\n                  options There are 3 different authentication options: * SSH private\n                  key (and its optional password) * Personal access token * Basic\n                  auth username and password Only one authentication mode will be\n                  considered if more than one option is specified, with ssh private\n                  key/password preferred first, then personal access token, and finally\n                  basic auth credentials.'\n                properties:\n                  accessToken:\n                    description: ResourceRef identifies a resource from which information\n                      can be loaded. Environment variables, files on the filesystem,\n                      Kubernetes Secrets and literal strings are currently supported.\n                    properties:\n                      env:\n                        description: Env selects an environment variable set on the\n                          operator process\n                        properties:\n                          name:\n                            description: Name of the environment variable\n                            type: string\n                        required:\n                        - name\n                        type: object\n                      filesystem:\n                        description: FileSystem selects a file on the operator's file\n                          system\n                        properties:\n                          path:\n                            description: Path on the filesystem to use to load information\n                              from.\n                            type: string\n                        required:\n                        - path\n                        type: object\n                      literal:\n                        description: LiteralRef refers to a literal value\n                        properties:\n                          value:\n                            description: Value to load\n                            type: string\n                        required:\n                        - value\n                        type: object\n                      secret:\n                        description: SecretRef refers to a Kubernetes Secret\n                        properties:\n                          key:\n                            description: Key within the Secret to use.\n                            type: string\n                          name:\n                            description: Name of the Secret\n                            type: string\n                          namespace:\n                            description: Namespace where the Secret is stored. Deprecated;\n                              non-empty values will be considered invalid unless namespace\n                              isolation is disabled in the controller.\n                            type: string\n                        required:\n                        - key\n                        - name\n                        type: object\n                      type:\n                        description: 'SelectorType is required and signifies the type\n                          of selector. Must be one of: Env, FS, Secret, Literal'\n                        type: string\n                    required:\n                    - type\n                    type: object\n                  basicAuth:\n                    description: BasicAuth configures git authentication through basic\n                      auth — i.e. username and password. Both UserName and Password\n                      are required.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      userName:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - password\n                    - userName\n                    type: object\n                  sshAuth:\n                    description: SSHAuth configures ssh-based auth for git authentication.\n                      SSHPrivateKey is required but password is optional.\n                    properties:\n                      password:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                      sshPrivateKey:\n                        description: ResourceRef identifies a resource from which\n                          information can be loaded. Environment variables, files\n                          on the filesystem, Kubernetes Secrets and literal strings\n                          are currently supported.\n                        properties:\n                          env:\n                            description: Env selects an environment variable set on\n                              the operator process\n                            properties:\n                              name:\n                                description: Name of the environment variable\n                                type: string\n                            required:\n                            - name\n                            type: object\n                          filesystem:\n                            description: FileSystem selects a file on the operator's\n                              file system\n                            properties:\n                              path:\n                                description: Path on the filesystem to use to load\n                                  information from.\n                                type: string\n                            required:\n                            - path\n                            type: object\n                          literal:\n                            description: LiteralRef refers to a literal value\n                            properties:\n                              value:\n                                description: Value to load\n                                type: string\n                            required:\n                            - value\n                            type: object\n                          secret:\n                            description: SecretRef refers to a Kubernetes Secret\n                            properties:\n                              key:\n                                description: Key within the Secret to use.\n                                type: string\n                              name:\n                                description: Name of the Secret\n                                type: string\n                              namespace:\n                                description: Namespace where the Secret is stored.\n                                  Deprecated; non-empty values will be considered\n                                  invalid unless namespace isolation is disabled in\n                                  the controller.\n                                type: string\n                            required:\n                            - key\n                            - name\n                            type: object\n                          type:\n                            description: 'SelectorType is required and signifies the\n                              type of selector. Must be one of: Env, FS, Secret, Literal'\n                            type: string\n                        required:\n                        - type\n                        type: object\n                    required:\n                    - sshPrivateKey\n                    type: object\n                type: object\n              gitAuthSecret:\n                description: '(optional) GitAuthSecret is the the name of a Secret\n                  containing an authentication option for the git repository. There\n                  are 3 different authentication options: * Personal access token\n                  * SSH private key (and it''s optional password) * Basic auth username\n                  and password Only one authentication mode will be considered if\n                  more than one option is specified, with ssh private key/password\n                  preferred first, then personal access token, and finally basic auth\n                  credentials. Deprecated. Use GitAuth instead.'\n                type: string\n              prerequisites:\n                description: (optional) Prerequisites is a list of references to other\n                  stacks, each with a constraint on how long ago it must have succeeded.\n                  This can be used to make sure e.g., state is re-evaluated before\n                  running a stack that depends on it.\n                items:\n                  description: PrerequisiteRef refers to another stack, and gives\n                    requirements for the prerequisite to be considered satisfied.\n                  properties:\n                    name:\n                      description: Name is the name of the Stack resource that is\n                        a prerequisite.\n                      type: string\n                    requirement:\n                      description: Requirement gives specific requirements for the\n                        prerequisite; the base requirement is that the referenced\n                        stack is in a successful state.\n                      properties:\n                        succeededWithinDuration:\n                          description: SucceededWithinDuration gives a duration within\n                            which the prerequisite must have reached a succeeded state;\n                            e.g., \"1h\" means \"the prerequisite must be successful,\n                            and have become so in the last hour\". Fields (should there\n                            ever be more than one) are not intended to be mutually\n                            exclusive.\n                          type: string\n                      type: object\n                  required:\n                  - name\n                  type: object\n                type: array\n              programRef:\n                description: ProgramRef refers to a Program object, to be used as\n                  the source for the stack.\n                properties:\n                  name:\n                    type: string\n                required:\n                - name\n                type: object\n              projectRepo:\n                description: ProjectRepo is the git source control repository from\n                  which we fetch the project code and configuration.\n                type: string\n              refresh:\n                description: (optional) Refresh can be set to true to refresh the\n                  stack before it is updated.\n                type: boolean\n              repoDir:\n                description: (optional) RepoDir is the directory to work from in the\n                  project's source repository where Pulumi.yaml is located. It is\n                  used in case Pulumi.yaml is not in the project source root.\n                type: string\n              resyncFrequencySeconds:\n                description: (optional) ResyncFrequencySeconds when set to a non-zero\n                  value, triggers a resync of the stack at the specified frequency\n                  even if no changes to the custom resource are detected. If branch\n                  tracking is enabled (branch is non-empty), commit polling will occur\n                  at this frequency. The minimal resync frequency supported is 60\n                  seconds. The default value for this field is 60 seconds.\n                format: int64\n                type: integer\n              retryOnUpdateConflict:\n                description: (optional) RetryOnUpdateConflict issues a stack update\n                  retry reconciliation loop in the event that the update hits a HTTP\n                  409 conflict due to another update in progress. This is only recommended\n                  if you are sure that the stack updates are idempotent, and if you\n                  are willing to accept retry loops until all spawned retries succeed.\n                  This will also create a more populated, and randomized activity\n                  timeline for the stack in the Pulumi Service.\n                type: boolean\n              secrets:\n                additionalProperties:\n                  type: string\n                description: '(optional) Secrets is the secret configuration for this\n                  stack, which can be optionally specified inline. If this is omitted,\n                  secrets configuration is assumed to be checked in and taken from\n                  the source repository. Deprecated: use SecretRefs instead.'\n                type: object\n              secretsProvider:\n                description: '(optional) SecretsProvider is used to initialize a Stack\n                  with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\"\n                  - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\"\n                  - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\"\n                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'\n                type: string\n              secretsRef:\n                additionalProperties:\n                  description: ResourceRef identifies a resource from which information\n                    can be loaded. Environment variables, files on the filesystem,\n                    Kubernetes Secrets and literal strings are currently supported.\n                  properties:\n                    env:\n                      description: Env selects an environment variable set on the\n                        operator process\n                      properties:\n                        name:\n                          description: Name of the environment variable\n                          type: string\n                      required:\n                      - name\n                      type: object\n                    filesystem:\n                      description: FileSystem selects a file on the operator's file\n                        system\n                      properties:\n                        path:\n                          description: Path on the filesystem to use to load information\n                            from.\n                          type: string\n                      required:\n                      - path\n                      type: object\n                    literal:\n                      description: LiteralRef refers to a literal value\n                      properties:\n                        value:\n                          description: Value to load\n                          type: string\n                      required:\n                      - value\n                      type: object\n                    secret:\n                      description: SecretRef refers to a Kubernetes Secret\n                      properties:\n                        key:\n                          description: Key within the Secret to use.\n                          type: string\n                        name:\n                          description: Name of the Secret\n                          type: string\n                        namespace:\n                          description: Namespace where the Secret is stored. Deprecated;\n                            non-empty values will be considered invalid unless namespace\n                            isolation is disabled in the controller.\n                          type: string\n                      required:\n                      - key\n                      - name\n                      type: object\n                    type:\n                      description: 'SelectorType is required and signifies the type\n                        of selector. Must be one of: Env, FS, Secret, Literal'\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: (optional) SecretRefs is the secret configuration for\n                  this stack which can be specified through ResourceRef. If this is\n                  omitted, secrets configuration is assumed to be checked in and taken\n                  from the source repository.\n                type: object\n              stack:\n                description: Stack is the fully qualified name of the stack to deploy\n                  (\u003corg\u003e/\u003cstack\u003e).\n                type: string\n              targets:\n                description: (optional) Targets is a list of URNs of resources to\n                  update exclusively. If supplied, only resources mentioned will be\n                  updated.\n                items:\n                  type: string\n                type: array\n              useLocalStackOnly:\n                description: (optional) UseLocalStackOnly can be set to true to prevent\n                  the operator from creating stacks that do not exist in the tracking\n                  git repo. The default behavior is to create a stack if it doesn't\n                  exist.\n                type: boolean\n            required:\n            - stack\n            type: object\n          status:\n            description: StackStatus defines the observed state of Stack\n            properties:\n              lastUpdate:\n                description: LastUpdate contains details of the status of the last\n                  update.\n                properties:\n                  lastAttemptedCommit:\n                    description: Last commit attempted\n                    type: string\n                  lastResyncTime:\n                    description: LastResyncTime contains a timestamp for the last\n                      time a resync of the stack took place.\n                    format: date-time\n                    type: string\n                  lastSuccessfulCommit:\n                    description: Last commit successfully applied\n                    type: string\n                  permalink:\n                    description: Permalink is the Pulumi Console URL of the stack\n                      operation.\n                    type: string\n                  state:\n                    description: State is the state of the stack update - one of `succeeded`\n                      or `failed`\n                    type: string\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: Outputs contains the exported stack output variables\n                  resulting from a deployment.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n"},"version":"3.30.2","acceptResources":true},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: programs.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Program\n    listKind: ProgramList\n    plural: programs\n    singular: program\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Program is the schema for the inline YAML program API.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          program:\n            properties:\n              configuration:\n                additionalProperties:\n                  properties:\n                    default:\n                      description: default is a value of the appropriate type for\n                        the template to use if no value is specified.\n                      x-kubernetes-preserve-unknown-fields: true\n                    type:\n                      description: type is the (required) data type for the parameter.\n                      enum:\n                      - String\n                      - Number\n                      - List\u003cNumber\u003e\n                      - List\u003cString\u003e\n                      type: string\n                  type: object\n                description: configuration specifies the Pulumi config inputs to the\n                  deployment. Either type or default is required.\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: outputs specifies the Pulumi stack outputs of the program\n                  and how they are computed from the resources.\n                type: object\n              resources:\n                additionalProperties:\n                  properties:\n                    get:\n                      description: A getter function for the resource. Supplying get\n                        is mutually exclusive to properties.\n                      properties:\n                        id:\n                          description: The ID of the resource to import.\n                          minLength: 1\n                          type: string\n                        state:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: state contains the known properties (input\n                            \u0026 output) of the resource. This assists the provider in\n                            figuring out the correct resource.\n                          type: object\n                      required:\n                      - id\n                      type: object\n                    options:\n                      description: options contains all resource options supported\n                        by Pulumi.\n                      properties:\n                        additionalSecretOutputs:\n                          description: additionalSecretOutputs specifies properties\n                            that must be encrypted as secrets.\n                          items:\n                            type: string\n                          type: array\n                        aliases:\n                          description: aliases specifies names that this resource\n                            used to have, so that renaming or refactoring doesn’t\n                            replace it.\n                          items:\n                            type: string\n                          type: array\n                        customTimeouts:\n                          description: customTimeouts overrides the default retry/timeout\n                            behavior for resource provisioning.\n                          properties:\n                            create:\n                              description: create is the custom timeout for create\n                                operations.\n                              type: string\n                            delete:\n                              description: delete is the custom timeout for delete\n                                operations.\n                              type: string\n                            update:\n                              description: update is the custom timeout for update\n                                operations.\n                              type: string\n                          type: object\n                        deleteBeforeReplace:\n                          description: deleteBeforeReplace overrides the default create-before-delete\n                            behavior when replacing.\n                          type: boolean\n                        dependsOn:\n                          description: dependsOn adds explicit dependencies in addition\n                            to the ones in the dependency graph.\n                          items:\n                            x-kubernetes-preserve-unknown-fields: true\n                          type: array\n                        ignoreChanges:\n                          description: ignoreChanges declares that changes to certain\n                            properties should be ignored when diffing.\n                          items:\n                            type: string\n                          type: array\n                        import:\n                          description: import adopts an existing resource from your\n                            cloud account under the control of Pulumi.\n                          type: string\n                        parent:\n                          description: parent resource option specifies a parent for\n                            a resource. It is used to associate children with the\n                            parents that encapsulate or are responsible for them.\n                          x-kubernetes-preserve-unknown-fields: true\n                        protect:\n                          description: protect prevents accidental deletion of a resource.\n                          type: boolean\n                        provider:\n                          description: provider resource option sets a provider for\n                            the resource.\n                          x-kubernetes-preserve-unknown-fields: true\n                        providers:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: providers resource option sets a map of providers\n                            for the resource and its children.\n                          type: object\n                        version:\n                          description: version specifies a provider plugin version\n                            that should be used when operating on a resource.\n                          type: string\n                      type: object\n                    properties:\n                      additionalProperties:\n                        x-kubernetes-preserve-unknown-fields: true\n                      description: properties contains the primary resource-specific\n                        keys and values to initialize the resource state.\n                      type: object\n                    type:\n                      description: type is the Pulumi type token for this resource.\n                      minLength: 1\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: resources declares the Pulumi resources that will be\n                  deployed and managed by the program.\n                type: object\n              variables:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: variables specifies intermediate values of the program;\n                  the values of variables are expressions that can be re-used.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n"}},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/Invoke","request":{"tok":"kubernetes:yaml:decode","args":{"text":"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.9.2\n  creationTimestamp: null\n  name: programs.pulumi.com\nspec:\n  group: pulumi.com\n  names:\n    kind: Program\n    listKind: ProgramList\n    plural: programs\n    singular: program\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - jsonPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    name: v1\n    schema:\n      openAPIV3Schema:\n        description: Program is the schema for the inline YAML program API.\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          program:\n            properties:\n              configuration:\n                additionalProperties:\n                  properties:\n                    default:\n                      description: default is a value of the appropriate type for\n                        the template to use if no value is specified.\n                      x-kubernetes-preserve-unknown-fields: true\n                    type:\n                      description: type is the (required) data type for the parameter.\n                      enum:\n                      - String\n                      - Number\n                      - List\u003cNumber\u003e\n                      - List\u003cString\u003e\n                      type: string\n                  type: object\n                description: configuration specifies the Pulumi config inputs to the\n                  deployment. Either type or default is required.\n                type: object\n              outputs:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: outputs specifies the Pulumi stack outputs of the program\n                  and how they are computed from the resources.\n                type: object\n              resources:\n                additionalProperties:\n                  properties:\n                    get:\n                      description: A getter function for the resource. Supplying get\n                        is mutually exclusive to properties.\n                      properties:\n                        id:\n                          description: The ID of the resource to import.\n                          minLength: 1\n                          type: string\n                        state:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: state contains the known properties (input\n                            \u0026 output) of the resource. This assists the provider in\n                            figuring out the correct resource.\n                          type: object\n                      required:\n                      - id\n                      type: object\n                    options:\n                      description: options contains all resource options supported\n                        by Pulumi.\n                      properties:\n                        additionalSecretOutputs:\n                          description: additionalSecretOutputs specifies properties\n                            that must be encrypted as secrets.\n                          items:\n                            type: string\n                          type: array\n                        aliases:\n                          description: aliases specifies names that this resource\n                            used to have, so that renaming or refactoring doesn’t\n                            replace it.\n                          items:\n                            type: string\n                          type: array\n                        customTimeouts:\n                          description: customTimeouts overrides the default retry/timeout\n                            behavior for resource provisioning.\n                          properties:\n                            create:\n                              description: create is the custom timeout for create\n                                operations.\n                              type: string\n                            delete:\n                              description: delete is the custom timeout for delete\n                                operations.\n                              type: string\n                            update:\n                              description: update is the custom timeout for update\n                                operations.\n                              type: string\n                          type: object\n                        deleteBeforeReplace:\n                          description: deleteBeforeReplace overrides the default create-before-delete\n                            behavior when replacing.\n                          type: boolean\n                        dependsOn:\n                          description: dependsOn adds explicit dependencies in addition\n                            to the ones in the dependency graph.\n                          items:\n                            x-kubernetes-preserve-unknown-fields: true\n                          type: array\n                        ignoreChanges:\n                          description: ignoreChanges declares that changes to certain\n                            properties should be ignored when diffing.\n                          items:\n                            type: string\n                          type: array\n                        import:\n                          description: import adopts an existing resource from your\n                            cloud account under the control of Pulumi.\n                          type: string\n                        parent:\n                          description: parent resource option specifies a parent for\n                            a resource. It is used to associate children with the\n                            parents that encapsulate or are responsible for them.\n                          x-kubernetes-preserve-unknown-fields: true\n                        protect:\n                          description: protect prevents accidental deletion of a resource.\n                          type: boolean\n                        provider:\n                          description: provider resource option sets a provider for\n                            the resource.\n                          x-kubernetes-preserve-unknown-fields: true\n                        providers:\n                          additionalProperties:\n                            x-kubernetes-preserve-unknown-fields: true\n                          description: providers resource option sets a map of providers\n                            for the resource and its children.\n                          type: object\n                        version:\n                          description: version specifies a provider plugin version\n                            that should be used when operating on a resource.\n                          type: string\n                      type: object\n                    properties:\n                      additionalProperties:\n                        x-kubernetes-preserve-unknown-fields: true\n                      description: properties contains the primary resource-specific\n                        keys and values to initialize the resource state.\n                      type: object\n                    type:\n                      description: type is the Pulumi type token for this resource.\n                      minLength: 1\n                      type: string\n                  required:\n                  - type\n                  type: object\n                description: resources declares the Pulumi resources that will be\n                  deployed and managed by the program.\n                type: object\n              variables:\n                additionalProperties:\n                  x-kubernetes-preserve-unknown-fields: true\n                description: variables specifies intermediate values of the program;\n                  the values of variables are expressions that can be re-used.\n                type: object\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\n"},"version":"3.30.2","acceptResources":true},"response":{"return":{"result":[{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResourceOutputs","request":{"urn":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","outputs":{}},"response":{},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:yaml:ConfigFile","name":"programcrd","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","object":{},"acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/__main__.py","line":25}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::programcrd","object":{}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/SupportsFeature","request":{"id":"resourceReferences"},"response":{"hasSupport":true},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","olds":{},"news":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"namespace":"default"}},"randomSeed":"GxOFZ9jX6aWP30tWI77OfRODS8Vi9teQnOv5r0I4vMc="},"response":{"inputs":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-a17ed91c","namespace":"default"}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default","olds":{},"news":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"randomSeed":"GNrAufk2Q5I/2ypQaRDcNZoRRqO27GFD96VVw2mC0hM="},"response":{"inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-9d579508","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com","olds":{},"news":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"randomSeed":"W5RswWueIdxv1pDMbQPzjFB7qLsEFZT1/Ml4TMttIRU="},"response":{"inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","olds":{},"news":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"randomSeed":"22gDWFeQJhxQkhq3R3VAdf8nwD5iVM6bdztfaNRtmUg="},"response":{"inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","properties":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-a17ed91c","namespace":"default"}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-dd0685a0","__initialApiVersion":"v1","__inputs":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-a17ed91c","namespace":"default"}},"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:40Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}}},"manager":"pulumi-kubernetes-dd0685a0","operation":"Apply","time":"2023-11-10T17:00:40Z"}],"name":"operator-service-account-default-a17ed91c","namespace":"default","uid":"e73bade7-5b4a-4c66-98c8-8c20fba6859f"}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:core/v1:ServiceAccount","name":"operator-service-account-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"namespace":"default"}},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/core/v1/ServiceAccount.py","line":164}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","object":{"__fieldManager":"pulumi-kubernetes-dd0685a0","__initialApiVersion":"v1","__inputs":{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-service-account-default-a17ed91c","namespace":"default"}},"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:40Z","managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}}},"manager":"pulumi-kubernetes-dd0685a0","operation":"Apply","time":"2023-11-10T17:00:40Z"}],"name":"operator-service-account-default-a17ed91c","namespace":"default","uid":"e73bade7-5b4a-4c66-98c8-8c20fba6859f"}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default","properties":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-9d579508","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-19a099a9","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-9d579508","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:40Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:rules":{}},"manager":"pulumi-kubernetes-19a099a9","operation":"Apply","time":"2023-11-10T17:00:40Z"}],"name":"operator-role-default-9d579508","namespace":"default","uid":"a6dddd92-41cc-4181-aae3-0e0759581d19"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:rbac.authorization.k8s.io/v1:Role","name":"operator-role-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"rules":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1alpha1:Role","parentUrn":""}},{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1beta1:Role","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/rbac/v1/Role.py","line":128}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default","object":{"__fieldManager":"pulumi-kubernetes-19a099a9","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-default-9d579508","namespace":"default"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:40Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:rules":{}},"manager":"pulumi-kubernetes-19a099a9","operation":"Apply","time":"2023-11-10T17:00:40Z"}],"name":"operator-role-default-9d579508","namespace":"default","uid":"a6dddd92-41cc-4181-aae3-0e0759581d19"},"rules":[{"apiGroups":[""],"resources":["pods","services","services/finalizers","endpoints","persistentvolumeclaims","events","configmaps","secrets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"],"verbs":["create","get"]},{"apiGroups":["apps"],"resourceNames":["pulumi-kubernetes-operator"],"resources":["deployments/finalizers"],"verbs":["update"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]},{"apiGroups":["apps"],"resources":["replicasets","deployments"],"verbs":["get"]},{"apiGroups":["pulumi.com"],"resources":["*"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create","get","list","update"]}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::operator-role-binding-default","olds":{},"news":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]},"randomSeed":"4Xr9uEn8+8GU5mDHBc+dGehAhQBZTyds7WHcJl8AqtE="},"response":{"inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-3f7acfaf","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com","properties":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-d0d67037","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"programs.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Program\",\"listKind\":\"ProgramList\",\"plural\":\"programs\",\"singular\":\"program\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Program is the schema for the inline YAML program API.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"program\":{\"properties\":{\"configuration\":{\"additionalProperties\":{\"properties\":{\"default\":{\"description\":\"default is a value of the appropriate type for the template to use if no value is specified.\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":{\"description\":\"type is the (required) data type for the parameter.\",\"enum\":[\"String\",\"Number\",\"List\\u003cNumber\\u003e\",\"List\\u003cString\\u003e\"],\"type\":\"string\"}},\"type\":\"object\"},\"description\":\"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.\",\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.\",\"type\":\"object\"},\"resources\":{\"additionalProperties\":{\"properties\":{\"get\":{\"description\":\"A getter function for the resource. Supplying get is mutually exclusive to properties.\",\"properties\":{\"id\":{\"description\":\"The ID of the resource to import.\",\"minLength\":1,\"type\":\"string\"},\"state\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"state contains the known properties (input \\u0026 output) of the resource. This assists the provider in figuring out the correct resource.\",\"type\":\"object\"}},\"required\":[\"id\"],\"type\":\"object\"},\"options\":{\"description\":\"options contains all resource options supported by Pulumi.\",\"properties\":{\"additionalSecretOutputs\":{\"description\":\"additionalSecretOutputs specifies properties that must be encrypted as secrets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"aliases\":{\"description\":\"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"customTimeouts\":{\"description\":\"customTimeouts overrides the default retry/timeout behavior for resource provisioning.\",\"properties\":{\"create\":{\"description\":\"create is the custom timeout for create operations.\",\"type\":\"string\"},\"delete\":{\"description\":\"delete is the custom timeout for delete operations.\",\"type\":\"string\"},\"update\":{\"description\":\"update is the custom timeout for update operations.\",\"type\":\"string\"}},\"type\":\"object\"},\"deleteBeforeReplace\":{\"description\":\"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.\",\"type\":\"boolean\"},\"dependsOn\":{\"description\":\"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.\",\"items\":{\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"ignoreChanges\":{\"description\":\"ignoreChanges declares that changes to certain properties should be ignored when diffing.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"import\":{\"description\":\"import adopts an existing resource from your cloud account under the control of Pulumi.\",\"type\":\"string\"},\"parent\":{\"description\":\"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.\",\"x-kubernetes-preserve-unknown-fields\":true},\"protect\":{\"description\":\"protect prevents accidental deletion of a resource.\",\"type\":\"boolean\"},\"provider\":{\"description\":\"provider resource option sets a provider for the resource.\",\"x-kubernetes-preserve-unknown-fields\":true},\"providers\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"providers resource option sets a map of providers for the resource and its children.\",\"type\":\"object\"},\"version\":{\"description\":\"version specifies a provider plugin version that should be used when operating on a resource.\",\"type\":\"string\"}},\"type\":\"object\"},\"properties\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"properties contains the primary resource-specific keys and values to initialize the resource state.\",\"type\":\"object\"},\"type\":{\"description\":\"type is the Pulumi type token for this resource.\",\"minLength\":1,\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"resources declares the Pulumi resources that will be deployed and managed by the program.\",\"type\":\"object\"},\"variables\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-d0d67037","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"programs.pulumi.com","resourceVersion":"148781","uid":"713b3034-b3e9-4510-8266-35f3f87d8d7b"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::operator-role-binding-default","properties":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-3f7acfaf","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-5f3be261","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-3f7acfaf","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:40Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:roleRef":{},"f:subjects":{}},"manager":"pulumi-kubernetes-5f3be261","operation":"Apply","time":"2023-11-10T17:00:40Z"}],"name":"operator-role-binding-default-3f7acfaf","namespace":"default","uid":"a68ea64c-fd45-4143-b97e-165e74f9c06a"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:rbac.authorization.k8s.io/v1:RoleBinding","name":"operator-role-binding-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]},"dependencies":["urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default"],"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"roleRef":{"urns":["urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:Role::operator-role-default"]},"subjects":{"urns":["urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default"]}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleBinding","parentUrn":""}},{"spec":{"type":"kubernetes:rbac.authorization.k8s.io/v1beta1:RoleBinding","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/rbac/v1/RoleBinding.py","line":145}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::operator-role-binding-default","object":{"__fieldManager":"pulumi-kubernetes-5f3be261","__initialApiVersion":"rbac.authorization.k8s.io/v1","__inputs":{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"operator-role-binding-default-3f7acfaf","namespace":"default"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]},"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:40Z","managedFields":[{"apiVersion":"rbac.authorization.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:roleRef":{},"f:subjects":{}},"manager":"pulumi-kubernetes-5f3be261","operation":"Apply","time":"2023-11-10T17:00:40Z"}],"name":"operator-role-binding-default-3f7acfaf","namespace":"default","uid":"a68ea64c-fd45-4143-b97e-165e74f9c06a"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"operator-role-default-9d579508"},"subjects":[{"kind":"ServiceAccount","name":"operator-service-account-default-a17ed91c"}]}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition","name":"programs.pulumi.com","parent":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::programcrd","custom":true,"object":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"spec":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/apiextensions/v1/CustomResourceDefinition.py","line":127}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com","object":{"__fieldManager":"pulumi-kubernetes-d0d67037","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"programs.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"programs.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Program\",\"listKind\":\"ProgramList\",\"plural\":\"programs\",\"singular\":\"program\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Program is the schema for the inline YAML program API.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"program\":{\"properties\":{\"configuration\":{\"additionalProperties\":{\"properties\":{\"default\":{\"description\":\"default is a value of the appropriate type for the template to use if no value is specified.\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":{\"description\":\"type is the (required) data type for the parameter.\",\"enum\":[\"String\",\"Number\",\"List\\u003cNumber\\u003e\",\"List\\u003cString\\u003e\"],\"type\":\"string\"}},\"type\":\"object\"},\"description\":\"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.\",\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.\",\"type\":\"object\"},\"resources\":{\"additionalProperties\":{\"properties\":{\"get\":{\"description\":\"A getter function for the resource. Supplying get is mutually exclusive to properties.\",\"properties\":{\"id\":{\"description\":\"The ID of the resource to import.\",\"minLength\":1,\"type\":\"string\"},\"state\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"state contains the known properties (input \\u0026 output) of the resource. This assists the provider in figuring out the correct resource.\",\"type\":\"object\"}},\"required\":[\"id\"],\"type\":\"object\"},\"options\":{\"description\":\"options contains all resource options supported by Pulumi.\",\"properties\":{\"additionalSecretOutputs\":{\"description\":\"additionalSecretOutputs specifies properties that must be encrypted as secrets.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"aliases\":{\"description\":\"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"customTimeouts\":{\"description\":\"customTimeouts overrides the default retry/timeout behavior for resource provisioning.\",\"properties\":{\"create\":{\"description\":\"create is the custom timeout for create operations.\",\"type\":\"string\"},\"delete\":{\"description\":\"delete is the custom timeout for delete operations.\",\"type\":\"string\"},\"update\":{\"description\":\"update is the custom timeout for update operations.\",\"type\":\"string\"}},\"type\":\"object\"},\"deleteBeforeReplace\":{\"description\":\"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.\",\"type\":\"boolean\"},\"dependsOn\":{\"description\":\"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.\",\"items\":{\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"ignoreChanges\":{\"description\":\"ignoreChanges declares that changes to certain properties should be ignored when diffing.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"import\":{\"description\":\"import adopts an existing resource from your cloud account under the control of Pulumi.\",\"type\":\"string\"},\"parent\":{\"description\":\"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.\",\"x-kubernetes-preserve-unknown-fields\":true},\"protect\":{\"description\":\"protect prevents accidental deletion of a resource.\",\"type\":\"boolean\"},\"provider\":{\"description\":\"provider resource option sets a provider for the resource.\",\"x-kubernetes-preserve-unknown-fields\":true},\"providers\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"providers resource option sets a map of providers for the resource and its children.\",\"type\":\"object\"},\"version\":{\"description\":\"version specifies a provider plugin version that should be used when operating on a resource.\",\"type\":\"string\"}},\"type\":\"object\"},\"properties\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"properties contains the primary resource-specific keys and values to initialize the resource state.\",\"type\":\"object\"},\"type\":{\"description\":\"type is the Pulumi type token for this resource.\",\"minLength\":1,\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"resources declares the Pulumi resources that will be deployed and managed by the program.\",\"type\":\"object\"},\"variables\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-d0d67037","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"programs.pulumi.com","resourceVersion":"148781","uid":"713b3034-b3e9-4510-8266-35f3f87d8d7b"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Program","listKind":"ProgramList","plural":"programs","singular":"program"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Program is the schema for the inline YAML program API.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"program":{"properties":{"configuration":{"additionalProperties":{"properties":{"default":{"description":"default is a value of the appropriate type for the template to use if no value is specified.","x-kubernetes-preserve-unknown-fields":true},"type":{"description":"type is the (required) data type for the parameter.","enum":["String","Number","List\u003cNumber\u003e","List\u003cString\u003e"],"type":"string"}},"type":"object"},"description":"configuration specifies the Pulumi config inputs to the deployment. Either type or default is required.","type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"outputs specifies the Pulumi stack outputs of the program and how they are computed from the resources.","type":"object"},"resources":{"additionalProperties":{"properties":{"get":{"description":"A getter function for the resource. Supplying get is mutually exclusive to properties.","properties":{"id":{"description":"The ID of the resource to import.","minLength":1,"type":"string"},"state":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"state contains the known properties (input \u0026 output) of the resource. This assists the provider in figuring out the correct resource.","type":"object"}},"required":["id"],"type":"object"},"options":{"description":"options contains all resource options supported by Pulumi.","properties":{"additionalSecretOutputs":{"description":"additionalSecretOutputs specifies properties that must be encrypted as secrets.","items":{"type":"string"},"type":"array"},"aliases":{"description":"aliases specifies names that this resource used to have, so that renaming or refactoring doesn’t replace it.","items":{"type":"string"},"type":"array"},"customTimeouts":{"description":"customTimeouts overrides the default retry/timeout behavior for resource provisioning.","properties":{"create":{"description":"create is the custom timeout for create operations.","type":"string"},"delete":{"description":"delete is the custom timeout for delete operations.","type":"string"},"update":{"description":"update is the custom timeout for update operations.","type":"string"}},"type":"object"},"deleteBeforeReplace":{"description":"deleteBeforeReplace overrides the default create-before-delete behavior when replacing.","type":"boolean"},"dependsOn":{"description":"dependsOn adds explicit dependencies in addition to the ones in the dependency graph.","items":{"x-kubernetes-preserve-unknown-fields":true},"type":"array"},"ignoreChanges":{"description":"ignoreChanges declares that changes to certain properties should be ignored when diffing.","items":{"type":"string"},"type":"array"},"import":{"description":"import adopts an existing resource from your cloud account under the control of Pulumi.","type":"string"},"parent":{"description":"parent resource option specifies a parent for a resource. It is used to associate children with the parents that encapsulate or are responsible for them.","x-kubernetes-preserve-unknown-fields":true},"protect":{"description":"protect prevents accidental deletion of a resource.","type":"boolean"},"provider":{"description":"provider resource option sets a provider for the resource.","x-kubernetes-preserve-unknown-fields":true},"providers":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"providers resource option sets a map of providers for the resource and its children.","type":"object"},"version":{"description":"version specifies a provider plugin version that should be used when operating on a resource.","type":"string"}},"type":"object"},"properties":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"properties contains the primary resource-specific keys and values to initialize the resource state.","type":"object"},"type":{"description":"type is the Pulumi type token for this resource.","minLength":1,"type":"string"}},"required":["type"],"type":"object"},"description":"resources declares the Pulumi resources that will be deployed and managed by the program.","type":"object"},"variables":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"variables specifies intermediate values of the program; the values of variables are expressions that can be re-used.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResourceOutputs","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::programcrd","outputs":{"resources":{"apiextensions.k8s.io/v1/CustomResourceDefinition:programs.pulumi.com":{"4dabf18193072939515e22adb298388d":"5cf8f73096256a8f31e491e813e4eb8e","id":"04da6b54-80e4-46f7-96ec-b56ff0331ba9","urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com"}}}},"response":{},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","properties":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-c2d63fe7","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"stacks.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Stack\",\"listKind\":\"StackList\",\"plural\":\"stacks\",\"singular\":\"stack\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"},{\"jsonPath\":\".status.lastUpdate.state\",\"name\":\"State\",\"type\":\"string\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"conditions\":{\"items\":{\"description\":\"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \\\"Available\\\", \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\" protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\",\"properties\":{\"lastTransitionTime\":{\"description\":\"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\",\"format\":\"date-time\",\"type\":\"string\"},\"message\":{\"description\":\"message is a human readable message indicating details about the transition. This may be an empty string.\",\"maxLength\":32768,\"type\":\"string\"},\"observedGeneration\":{\"description\":\"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.\",\"format\":\"int64\",\"minimum\":0,\"type\":\"integer\"},\"reason\":{\"description\":\"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.\",\"maxLength\":1024,\"minLength\":1,\"pattern\":\"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\",\"type\":\"string\"},\"status\":{\"description\":\"status of the condition, one of True, False, Unknown.\",\"enum\":[\"True\",\"False\",\"Unknown\"],\"type\":\"string\"},\"type\":{\"description\":\"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\",\"maxLength\":316,\"pattern\":\"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\",\"type\":\"string\"}},\"required\":[\"lastTransitionTime\",\"message\",\"reason\",\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"},\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"observedGeneration\":{\"description\":\"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object\",\"format\":\"int64\",\"type\":\"integer\"},\"observedReconcileRequest\":{\"description\":\"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.\",\"type\":\"string\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-c2d63fe7","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"stacks.pulumi.com","resourceVersion":"148785","uid":"1bddb011-8f96-4eca-8eea-93c6e80711f5"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition","name":"stacks.pulumi.com","parent":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::stackcrd","custom":true,"object":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"spec":{}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/apiextensions/v1/CustomResourceDefinition.py","line":127}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","object":{"__fieldManager":"pulumi-kubernetes-c2d63fe7","__initialApiVersion":"apiextensions.k8s.io/v1","__inputs":{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2"},"name":"stacks.pulumi.com"},"spec":{"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}},"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.9.2","kubectl.kubernetes.io/last-applied-configuration":"{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.9.2\"},\"creationTimestamp\":null,\"name\":\"stacks.pulumi.com\"},\"spec\":{\"group\":\"pulumi.com\",\"names\":{\"kind\":\"Stack\",\"listKind\":\"StackList\",\"plural\":\"stacks\",\"singular\":\"stack\"},\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"},{\"jsonPath\":\".status.lastUpdate.state\",\"name\":\"State\",\"type\":\"string\"}],\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"conditions\":{\"items\":{\"description\":\"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \\\"Available\\\", \\\"Progressing\\\", and \\\"Degraded\\\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\\\"conditions,omitempty\\\" patchStrategy:\\\"merge\\\" patchMergeKey:\\\"type\\\" protobuf:\\\"bytes,1,rep,name=conditions\\\"` \\n // other fields }\",\"properties\":{\"lastTransitionTime\":{\"description\":\"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\",\"format\":\"date-time\",\"type\":\"string\"},\"message\":{\"description\":\"message is a human readable message indicating details about the transition. This may be an empty string.\",\"maxLength\":32768,\"type\":\"string\"},\"observedGeneration\":{\"description\":\"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.\",\"format\":\"int64\",\"minimum\":0,\"type\":\"integer\"},\"reason\":{\"description\":\"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.\",\"maxLength\":1024,\"minLength\":1,\"pattern\":\"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$\",\"type\":\"string\"},\"status\":{\"description\":\"status of the condition, one of True, False, Unknown.\",\"enum\":[\"True\",\"False\",\"Unknown\"],\"type\":\"string\"},\"type\":{\"description\":\"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\",\"maxLength\":316,\"pattern\":\"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$\",\"type\":\"string\"}},\"required\":[\"lastTransitionTime\",\"message\",\"reason\",\"status\",\"type\"],\"type\":\"object\"},\"type\":\"array\"},\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"observedGeneration\":{\"description\":\"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object\",\"format\":\"int64\",\"type\":\"integer\"},\"observedReconcileRequest\":{\"description\":\"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.\",\"type\":\"string\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StackSpec defines the desired state of Pulumi Stack being managed by this operator.\",\"properties\":{\"accessTokenSecret\":{\"description\":\"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \\\"secret\\\" entry with the key PULUMI_ACCESS_TOKEN instead.\",\"type\":\"string\"},\"backend\":{\"description\":\"(optional) Backend is an optional backend URL to use for all Pulumi operations.\\u003cbr/\\u003e Examples:\\u003cbr/\\u003e - Pulumi Service:              \\\"https://app.pulumi.com\\\" (default)\\u003cbr/\\u003e - Self-managed Pulumi Service: \\\"https://pulumi.acmecorp.com\\\" \\u003cbr/\\u003e - Local:                       \\\"file://./einstein\\\" \\u003cbr/\\u003e - AWS:                         \\\"s3://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - Azure:                       \\\"azblob://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e - GCP:                         \\\"gs://\\u003cmy-pulumi-state-bucket\\u003e\\\" \\u003cbr/\\u003e See: https://www.pulumi.com/docs/intro/concepts/state/\",\"type\":\"string\"},\"branch\":{\"description\":\"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.\",\"type\":\"string\"},\"commit\":{\"description\":\"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.\",\"type\":\"string\"},\"config\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"continueResyncOnCommitMatch\":{\"description\":\"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.\",\"type\":\"boolean\"},\"destroyOnFinalize\":{\"description\":\"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.\",\"type\":\"boolean\"},\"envRefs\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.\",\"type\":\"object\"},\"envSecrets\":{\"description\":\"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"envs\":{\"description\":\"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"expectNoRefreshChanges\":{\"description\":\"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).\",\"type\":\"boolean\"},\"fluxSource\":{\"description\":\"FluxSource specifies how to fetch source code from a Flux source object.\",\"properties\":{\"dir\":{\"description\":\"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.\",\"type\":\"string\"},\"sourceRef\":{\"properties\":{\"apiVersion\":{\"type\":\"string\"},\"kind\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"apiVersion\",\"kind\",\"name\"],\"type\":\"object\"}},\"required\":[\"sourceRef\"],\"type\":\"object\"},\"gitAuth\":{\"description\":\"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.\",\"properties\":{\"accessToken\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"basicAuth\":{\"description\":\"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"userName\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"password\",\"userName\"],\"type\":\"object\"},\"sshAuth\":{\"description\":\"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.\",\"properties\":{\"password\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"sshPrivateKey\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"}},\"required\":[\"sshPrivateKey\"],\"type\":\"object\"}},\"type\":\"object\"},\"gitAuthSecret\":{\"description\":\"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.\",\"type\":\"string\"},\"prerequisites\":{\"description\":\"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.\",\"items\":{\"description\":\"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.\",\"properties\":{\"name\":{\"description\":\"Name is the name of the Stack resource that is a prerequisite.\",\"type\":\"string\"},\"requirement\":{\"description\":\"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.\",\"properties\":{\"succeededWithinDuration\":{\"description\":\"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \\\"1h\\\" means \\\"the prerequisite must be successful, and have become so in the last hour\\\". Fields (should there ever be more than one) are not intended to be mutually exclusive.\",\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"name\"],\"type\":\"object\"},\"type\":\"array\"},\"programRef\":{\"description\":\"ProgramRef refers to a Program object, to be used as the source for the stack.\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"projectRepo\":{\"description\":\"ProjectRepo is the git source control repository from which we fetch the project code and configuration.\",\"type\":\"string\"},\"refresh\":{\"description\":\"(optional) Refresh can be set to true to refresh the stack before it is updated.\",\"type\":\"boolean\"},\"repoDir\":{\"description\":\"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.\",\"type\":\"string\"},\"resyncFrequencySeconds\":{\"description\":\"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.\",\"format\":\"int64\",\"type\":\"integer\"},\"retryOnUpdateConflict\":{\"description\":\"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.\",\"type\":\"boolean\"},\"secrets\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.\",\"type\":\"object\"},\"secretsProvider\":{\"description\":\"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \\\"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\\\" - Azure: \\\"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\\\" - GCP:   \\\"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\\\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption\",\"type\":\"string\"},\"secretsRef\":{\"additionalProperties\":{\"description\":\"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.\",\"properties\":{\"env\":{\"description\":\"Env selects an environment variable set on the operator process\",\"properties\":{\"name\":{\"description\":\"Name of the environment variable\",\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"filesystem\":{\"description\":\"FileSystem selects a file on the operator's file system\",\"properties\":{\"path\":{\"description\":\"Path on the filesystem to use to load information from.\",\"type\":\"string\"}},\"required\":[\"path\"],\"type\":\"object\"},\"literal\":{\"description\":\"LiteralRef refers to a literal value\",\"properties\":{\"value\":{\"description\":\"Value to load\",\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"secret\":{\"description\":\"SecretRef refers to a Kubernetes Secret\",\"properties\":{\"key\":{\"description\":\"Key within the Secret to use.\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the Secret\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.\",\"type\":\"string\"}},\"required\":[\"key\",\"name\"],\"type\":\"object\"},\"type\":{\"description\":\"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal\",\"type\":\"string\"}},\"required\":[\"type\"],\"type\":\"object\"},\"description\":\"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.\",\"type\":\"object\"},\"stack\":{\"description\":\"Stack is the fully qualified name of the stack to deploy (\\u003corg\\u003e/\\u003cstack\\u003e).\",\"type\":\"string\"},\"targets\":{\"description\":\"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"useLocalStackOnly\":{\"description\":\"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.\",\"type\":\"boolean\"}},\"required\":[\"stack\"],\"type\":\"object\"},\"status\":{\"description\":\"StackStatus defines the observed state of Stack\",\"properties\":{\"lastUpdate\":{\"description\":\"LastUpdate contains details of the status of the last update.\",\"properties\":{\"lastAttemptedCommit\":{\"description\":\"Last commit attempted\",\"type\":\"string\"},\"lastResyncTime\":{\"description\":\"LastResyncTime contains a timestamp for the last time a resync of the stack took place.\",\"format\":\"date-time\",\"type\":\"string\"},\"lastSuccessfulCommit\":{\"description\":\"Last commit successfully applied\",\"type\":\"string\"},\"permalink\":{\"description\":\"Permalink is the Pulumi Console URL of the stack operation.\",\"type\":\"string\"},\"state\":{\"description\":\"State is the state of the stack update - one of `succeeded` or `failed`\",\"type\":\"string\"}},\"type\":\"object\"},\"outputs\":{\"additionalProperties\":{\"x-kubernetes-preserve-unknown-fields\":true},\"description\":\"Outputs contains the exported stack output variables resulting from a deployment.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}}]}}\n"},"creationTimestamp":"2023-09-08T21:47:35Z","generation":1,"managedFields":[{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:controller-gen.kubebuilder.io/version":{}}},"f:spec":{"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"pulumi-kubernetes-c2d63fe7","operation":"Apply"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:acceptedNames":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:conditions":{"k:{\"type\":\"Established\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"NamesAccepted\"}":{".":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}},"manager":"kube-apiserver","operation":"Update","subresource":"status","time":"2023-09-08T21:47:35Z"},{"apiVersion":"apiextensions.k8s.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:controller-gen.kubebuilder.io/version":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{"f:conversion":{".":{},"f:strategy":{}},"f:group":{},"f:names":{"f:kind":{},"f:listKind":{},"f:plural":{},"f:singular":{}},"f:scope":{},"f:versions":{}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2023-09-08T21:47:35Z"}],"name":"stacks.pulumi.com","resourceVersion":"148785","uid":"1bddb011-8f96-4eca-8eea-93c6e80711f5"},"spec":{"conversion":{"strategy":"None"},"group":"pulumi.com","names":{"kind":"Stack","listKind":"StackList","plural":"stacks","singular":"stack"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"},{"jsonPath":".status.lastUpdate.state","name":"State","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"conditions":{"items":{"description":"Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }","properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","format":"date-time","type":"string"},"message":{"description":"message is a human readable message indicating details about the transition. This may be an empty string.","maxLength":32768,"type":"string"},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.","format":"int64","minimum":0,"type":"integer"},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$","type":"string"},"status":{"description":"status of the condition, one of True, False, Unknown.","enum":["True","False","Unknown"],"type":"string"},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$","type":"string"}},"required":["lastTransitionTime","message","reason","status","type"],"type":"object"},"type":"array"},"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"observedGeneration":{"description":"ObservedGeneration records the value of .meta.generation at the point the controller last processed this object","format":"int64","type":"integer"},"observedReconcileRequest":{"description":"ObservedReconcileRequest records the value of the annotation named for `ReconcileRequestAnnotation` when it was last seen.","type":"string"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}},{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"Stack is the Schema for the stacks API. Deprecated: Note Stacks from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is completely backward compatible. Users are strongly encouraged to switch to pulumi.com/v1.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"StackSpec defines the desired state of Pulumi Stack being managed by this operator.","properties":{"accessTokenSecret":{"description":"(optional) AccessTokenSecret is the name of a Secret containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated: use EnvRefs with a \"secret\" entry with the key PULUMI_ACCESS_TOKEN instead.","type":"string"},"backend":{"description":"(optional) Backend is an optional backend URL to use for all Pulumi operations.\u003cbr/\u003e Examples:\u003cbr/\u003e - Pulumi Service:              \"https://app.pulumi.com\" (default)\u003cbr/\u003e - Self-managed Pulumi Service: \"https://pulumi.acmecorp.com\" \u003cbr/\u003e - Local:                       \"file://./einstein\" \u003cbr/\u003e - AWS:                         \"s3://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - Azure:                       \"azblob://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e - GCP:                         \"gs://\u003cmy-pulumi-state-bucket\u003e\" \u003cbr/\u003e See: https://www.pulumi.com/docs/intro/concepts/state/","type":"string"},"branch":{"description":"(optional) Branch is the branch name to deploy, either the simple or fully qualified ref name, e.g. refs/heads/master. This is mutually exclusive with the Commit setting. Either value needs to be specified. When specified, the operator will periodically poll to check if the branch has any new commits. The frequency of the polling is configurable through ResyncFrequencySeconds, defaulting to every 60 seconds.","type":"string"},"commit":{"description":"(optional) Commit is the hash of the commit to deploy. If used, HEAD will be in detached mode. This is mutually exclusive with the Branch setting. Either value needs to be specified.","type":"string"},"config":{"additionalProperties":{"type":"string"},"description":"(optional) Config is the configuration for this stack, which can be optionally specified inline. If this is omitted, configuration is assumed to be checked in and taken from the source repository.","type":"object"},"continueResyncOnCommitMatch":{"description":"(optional) ContinueResyncOnCommitMatch - when true - informs the operator to continue trying to update stacks even if the revision of the source matches. This might be useful in environments where Pulumi programs have dynamic elements for example, calls to internal APIs where GitOps style commit tracking is not sufficient.  Defaults to false, i.e. when a particular revision is successfully run, the operator will not attempt to rerun the program at that revision again.","type":"boolean"},"destroyOnFinalize":{"description":"(optional) DestroyOnFinalize can be set to true to destroy the stack completely upon deletion of the Stack custom resource.","type":"boolean"},"envRefs":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) EnvRefs is an optional map containing environment variables as keys and stores descriptors to where the variables' values should be loaded from (one of literal, environment variable, file on the filesystem, or Kubernetes Secret) as values.","type":"object"},"envSecrets":{"description":"(optional) SecretEnvs is an optional array of Secret names containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"envs":{"description":"(optional) Envs is an optional array of config maps containing environment variables to set. Deprecated: use EnvRefs instead.","items":{"type":"string"},"type":"array"},"expectNoRefreshChanges":{"description":"(optional) ExpectNoRefreshChanges can be set to true if a stack is not expected to have changes during a refresh before the update is run. This could occur, for example, is a resource's state is changing outside of Pulumi (e.g., metadata, timestamps).","type":"boolean"},"fluxSource":{"description":"FluxSource specifies how to fetch source code from a Flux source object.","properties":{"dir":{"description":"Dir gives the subdirectory containing the Pulumi project (i.e., containing Pulumi.yaml) of interest, within the fetched source.","type":"string"},"sourceRef":{"properties":{"apiVersion":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"}},"required":["apiVersion","kind","name"],"type":"object"}},"required":["sourceRef"],"type":"object"},"gitAuth":{"description":"(optional) GitAuth allows configuring git authentication options There are 3 different authentication options: * SSH private key (and its optional password) * Personal access token * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials.","properties":{"accessToken":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"basicAuth":{"description":"BasicAuth configures git authentication through basic auth — i.e. username and password. Both UserName and Password are required.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"userName":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["password","userName"],"type":"object"},"sshAuth":{"description":"SSHAuth configures ssh-based auth for git authentication. SSHPrivateKey is required but password is optional.","properties":{"password":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"sshPrivateKey":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"}},"required":["sshPrivateKey"],"type":"object"}},"type":"object"},"gitAuthSecret":{"description":"(optional) GitAuthSecret is the the name of a Secret containing an authentication option for the git repository. There are 3 different authentication options: * Personal access token * SSH private key (and it's optional password) * Basic auth username and password Only one authentication mode will be considered if more than one option is specified, with ssh private key/password preferred first, then personal access token, and finally basic auth credentials. Deprecated. Use GitAuth instead.","type":"string"},"prerequisites":{"description":"(optional) Prerequisites is a list of references to other stacks, each with a constraint on how long ago it must have succeeded. This can be used to make sure e.g., state is re-evaluated before running a stack that depends on it.","items":{"description":"PrerequisiteRef refers to another stack, and gives requirements for the prerequisite to be considered satisfied.","properties":{"name":{"description":"Name is the name of the Stack resource that is a prerequisite.","type":"string"},"requirement":{"description":"Requirement gives specific requirements for the prerequisite; the base requirement is that the referenced stack is in a successful state.","properties":{"succeededWithinDuration":{"description":"SucceededWithinDuration gives a duration within which the prerequisite must have reached a succeeded state; e.g., \"1h\" means \"the prerequisite must be successful, and have become so in the last hour\". Fields (should there ever be more than one) are not intended to be mutually exclusive.","type":"string"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"programRef":{"description":"ProgramRef refers to a Program object, to be used as the source for the stack.","properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"projectRepo":{"description":"ProjectRepo is the git source control repository from which we fetch the project code and configuration.","type":"string"},"refresh":{"description":"(optional) Refresh can be set to true to refresh the stack before it is updated.","type":"boolean"},"repoDir":{"description":"(optional) RepoDir is the directory to work from in the project's source repository where Pulumi.yaml is located. It is used in case Pulumi.yaml is not in the project source root.","type":"string"},"resyncFrequencySeconds":{"description":"(optional) ResyncFrequencySeconds when set to a non-zero value, triggers a resync of the stack at the specified frequency even if no changes to the custom resource are detected. If branch tracking is enabled (branch is non-empty), commit polling will occur at this frequency. The minimal resync frequency supported is 60 seconds. The default value for this field is 60 seconds.","format":"int64","type":"integer"},"retryOnUpdateConflict":{"description":"(optional) RetryOnUpdateConflict issues a stack update retry reconciliation loop in the event that the update hits a HTTP 409 conflict due to another update in progress. This is only recommended if you are sure that the stack updates are idempotent, and if you are willing to accept retry loops until all spawned retries succeed. This will also create a more populated, and randomized activity timeline for the stack in the Pulumi Service.","type":"boolean"},"secrets":{"additionalProperties":{"type":"string"},"description":"(optional) Secrets is the secret configuration for this stack, which can be optionally specified inline. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository. Deprecated: use SecretRefs instead.","type":"object"},"secretsProvider":{"description":"(optional) SecretsProvider is used to initialize a Stack with alternative encryption. Examples: - AWS:   \"awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1\" - Azure: \"azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname\" - GCP:   \"gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY\" - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption","type":"string"},"secretsRef":{"additionalProperties":{"description":"ResourceRef identifies a resource from which information can be loaded. Environment variables, files on the filesystem, Kubernetes Secrets and literal strings are currently supported.","properties":{"env":{"description":"Env selects an environment variable set on the operator process","properties":{"name":{"description":"Name of the environment variable","type":"string"}},"required":["name"],"type":"object"},"filesystem":{"description":"FileSystem selects a file on the operator's file system","properties":{"path":{"description":"Path on the filesystem to use to load information from.","type":"string"}},"required":["path"],"type":"object"},"literal":{"description":"LiteralRef refers to a literal value","properties":{"value":{"description":"Value to load","type":"string"}},"required":["value"],"type":"object"},"secret":{"description":"SecretRef refers to a Kubernetes Secret","properties":{"key":{"description":"Key within the Secret to use.","type":"string"},"name":{"description":"Name of the Secret","type":"string"},"namespace":{"description":"Namespace where the Secret is stored. Deprecated; non-empty values will be considered invalid unless namespace isolation is disabled in the controller.","type":"string"}},"required":["key","name"],"type":"object"},"type":{"description":"SelectorType is required and signifies the type of selector. Must be one of: Env, FS, Secret, Literal","type":"string"}},"required":["type"],"type":"object"},"description":"(optional) SecretRefs is the secret configuration for this stack which can be specified through ResourceRef. If this is omitted, secrets configuration is assumed to be checked in and taken from the source repository.","type":"object"},"stack":{"description":"Stack is the fully qualified name of the stack to deploy (\u003corg\u003e/\u003cstack\u003e).","type":"string"},"targets":{"description":"(optional) Targets is a list of URNs of resources to update exclusively. If supplied, only resources mentioned will be updated.","items":{"type":"string"},"type":"array"},"useLocalStackOnly":{"description":"(optional) UseLocalStackOnly can be set to true to prevent the operator from creating stacks that do not exist in the tracking git repo. The default behavior is to create a stack if it doesn't exist.","type":"boolean"}},"required":["stack"],"type":"object"},"status":{"description":"StackStatus defines the observed state of Stack","properties":{"lastUpdate":{"description":"LastUpdate contains details of the status of the last update.","properties":{"lastAttemptedCommit":{"description":"Last commit attempted","type":"string"},"lastResyncTime":{"description":"LastResyncTime contains a timestamp for the last time a resync of the stack took place.","format":"date-time","type":"string"},"lastSuccessfulCommit":{"description":"Last commit successfully applied","type":"string"},"permalink":{"description":"Permalink is the Pulumi Console URL of the stack operation.","type":"string"},"state":{"description":"State is the state of the stack update - one of `succeeded` or `failed`","type":"string"}},"type":"object"},"outputs":{"additionalProperties":{"x-kubernetes-preserve-unknown-fields":true},"description":"Outputs contains the exported stack output variables resulting from a deployment.","type":"object"}},"type":"object"}},"type":"object"}},"served":true,"storage":false,"subresources":{"status":{}}}]}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResourceOutputs","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile::stackcrd","outputs":{"resources":{"apiextensions.k8s.io/v1/CustomResourceDefinition:stacks.pulumi.com":{"4dabf18193072939515e22adb298388d":"5cf8f73096256a8f31e491e813e4eb8e","id":"04da6b54-80e4-46f7-96ec-b56ff0331ba9","urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com"}}}},"response":{},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.ResourceProvider/Check","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:apps/v1:Deployment::pulumi-kubernetes-operator-default","olds":{},"news":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-a17ed91c"},"terminationGracePeriodSeconds":300}}},"randomSeed":"3msi371Ba9pR5cil5DyMHA06APx1LMMALOcCx74wskw="},"response":{"inputs":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-e588b971","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-a17ed91c"}}}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceProvider/Create","request":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:apps/v1:Deployment::pulumi-kubernetes-operator-default","properties":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-e588b971","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-a17ed91c"}}}},"preview":true},"response":{"properties":{"__fieldManager":"pulumi-kubernetes-9a73ac25","__initialApiVersion":"apps/v1","__inputs":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-e588b971","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-a17ed91c"}}}},"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:41Z","generation":1,"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"pulumi-kubernetes-operator\"}":{".":{},"f:args":{},"f:command":{},"f:env":{"k:{\"name\":\"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"MAX_CONCURRENT_RECONCILES\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"OPERATOR_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}},"k:{\"name\":\"WATCH_NAMESPACE\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{}}},"f:serviceAccountName":{}}}}},"manager":"pulumi-kubernetes-9a73ac25","operation":"Apply","time":"2023-11-10T17:00:41Z"}],"name":"pulumi-kubernetes-operator-default-e588b971","namespace":"default","uid":"74fc2bff-8067-4c75-9631-6cc41e79c05d"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"operator-service-account-default-a17ed91c","serviceAccountName":"operator-service-account-default-a17ed91c","terminationGracePeriodSeconds":30}}}}},"metadata":{"kind":"resource","mode":"client","name":"kubernetes"}}
{"method":"/pulumirpc.ResourceMonitor/RegisterResource","request":{"type":"kubernetes:apps/v1:Deployment","name":"pulumi-kubernetes-operator-default","parent":"urn:pulumi:dev::deploy-operator-py::pulumi:pulumi:Stack::deploy-operator-py-dev","custom":true,"object":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-a17ed91c"},"terminationGracePeriodSeconds":300}}},"dependencies":["urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::stacks.pulumi.com","urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default","urn:pulumi:dev::deploy-operator-py::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::programs.pulumi.com"],"propertyDependencies":{"apiVersion":{},"kind":{},"metadata":{},"spec":{"urns":["urn:pulumi:dev::deploy-operator-py::kubernetes:core/v1:ServiceAccount::operator-service-account-default"]}},"version":"3.30.2","acceptSecrets":true,"supportsPartialValues":true,"acceptResources":true,"aliases":[{"spec":{"type":"kubernetes:apps/v1beta1:Deployment","parentUrn":""}},{"spec":{"type":"kubernetes:apps/v1beta2:Deployment","parentUrn":""}},{"spec":{"type":"kubernetes:extensions/v1beta1:Deployment","parentUrn":""}}],"sourcePosition":{"uri":"file:///Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py/venv/lib/python3.11/site-packages/pulumi_kubernetes/apps/v1/Deployment.py","line":323}},"response":{"urn":"urn:pulumi:dev::deploy-operator-py::kubernetes:apps/v1:Deployment::pulumi-kubernetes-operator-default","object":{"__fieldManager":"pulumi-kubernetes-9a73ac25","__initialApiVersion":"apps/v1","__inputs":{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"name":"pulumi-kubernetes-operator-default-e588b971","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator"}],"serviceAccountName":"operator-service-account-default-a17ed91c"}}}},"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"pulumi.com/autonamed":"true"},"creationTimestamp":"2023-11-10T17:00:41Z","generation":1,"managedFields":[{"apiVersion":"apps/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:pulumi.com/autonamed":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"pulumi-kubernetes-operator\"}":{".":{},"f:args":{},"f:command":{},"f:env":{"k:{\"name\":\"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"MAX_CONCURRENT_RECONCILES\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"OPERATOR_NAME\"}":{".":{},"f:name":{},"f:value":{}},"k:{\"name\":\"POD_NAME\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}},"k:{\"name\":\"WATCH_NAMESPACE\"}":{".":{},"f:name":{},"f:valueFrom":{"f:fieldRef":{}}}},"f:image":{},"f:imagePullPolicy":{},"f:name":{}}},"f:serviceAccountName":{}}}}},"manager":"pulumi-kubernetes-9a73ac25","operation":"Apply","time":"2023-11-10T17:00:41Z"}],"name":"pulumi-kubernetes-operator-default-e588b971","namespace":"default","uid":"74fc2bff-8067-4c75-9631-6cc41e79c05d"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"name":"pulumi-kubernetes-operator"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"name":"pulumi-kubernetes-operator"}},"spec":{"containers":[{"args":["--zap-level=error","--zap-time-encoding=iso8601"],"command":["pulumi-kubernetes-operator"],"env":[{"name":"WATCH_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"OPERATOR_NAME","value":"pulumi-kubernetes-operator"},{"name":"GRACEFUL_SHUTDOWN_TIMEOUT_DURATION","value":"5m"},{"name":"MAX_CONCURRENT_RECONCILES","value":"10"}],"image":"pulumi/pulumi-kubernetes-operator:v1.13.0","imagePullPolicy":"Always","name":"pulumi-kubernetes-operator","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"operator-service-account-default-a17ed91c","serviceAccountName":"operator-service-account-default-a17ed91c","terminationGracePeriodSeconds":30}}}}},"metadata":{"mode":"server"}}
{"method":"/pulumirpc.LanguageRuntime/Run","request":{"project":"deploy-operator-py","stack":"dev","pwd":"/Users/eronwright/Pulumi/pulumi-kubernetes-operator/deploy/deploy-operator-py","program":".","dryRun":true,"parallel":2147483647,"monitorAddress":"127.0.0.1:51387","organization":"eron-pulumi-corp","configPropertyMap":{},"debug":true,"waitForAttach":true},"response":{},"metadata":{"kind":"language","mode":"client","runtime":"python"}}
