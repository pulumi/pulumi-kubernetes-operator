# -- Specifies the strategy used to replace old Pods by new ones, default: `RollingUpdate`
deploymentStrategy: ""

# -- Specifies the replica count for the deployment
replicaCount: 1

# -- Specifies termination grace period, default: `300`
terminationGracePeriodSeconds: 300

image:
  # -- The image registry to pull from
  registry: docker.io
  # -- The image repository to pull from
  repository: pulumi/pulumi-kubernetes-operator
  # -- The image pull policy
  pullPolicy: IfNotPresent
  # -- The image tag to pull, default: `Chart.appVersion`
  tag: ""

# -- The image pull secrets
imagePullSecrets: ""

controller:
  # -- Log Level ('debug', 'info', 'error', or any integer value > 0 which corresponds to custom debug levels of increasing verbosity)
  logLevel: info
  # -- the advertised address for the controller's service
  # advertisedAddress: "pulumi-kubernetes-operator.pulumi-kubernetes-operator.svc.cluster.local"

# -- Extra Environments to be passed to the operator
extraEnv: []

# RBAC settings
rbac:
  # -- Specifies whether RBAC resources should be created
  create: true
  # -- Specifies whether cluster roles and bindings should be created
  createClusterRole: true
  # -- Specifies whether namespaced roles and bindings should be created
  createRole: false
  # -- Specifies whether aggregation roles should be created to extend the built-in view and edit roles
  createClusterAggregationRoles: true
  # -- Specifies extra rules for the manager role, e.g. for a 3rd party Flux source
  extraRules: []

# -- Provide a name in place of pulumi-kubernetes-operator
nameOverride: ""
# -- String to fully override "pulumi-kubernetes-operator.fullname"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  # -- Create service account
  create: true
  # Annotations to add to the service account
  # -- Additional ServiceAccount annotations
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # -- Service account name to use, when empty will be set to created account if
  name: ""

# -- Pod annotations
podAnnotations: {}

# -- Deployment annotations
deploymentAnnotations: {}

# -- Service annotations
serviceAnnotations: {}

# -- Pod Security Context see [values.yaml](values.yaml)
podSecurityContext:
  runAsNonRoot: true
  # -- pulumi-kubernetes-operator user is 65532
  runAsUser: 65532
  # -- pulumi-kubernetes-operator group is 65532
  runAsGroup: 65532
  # fsGroup: 65532

# -- Security Context see [values.yaml](values.yaml)
securityContext:
  allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: true
  # seccompProfile:
  #   type: RuntimeDefault
  capabilities:
    drop:
      - ALL

# -- CPU/Memory resource requests/limits
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 128Mi
  requests:
    cpu: 200m
    memory: 128Mi

# -- Node selector
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- The affinity constraint
affinity: {}

# -- Extra Volumes for the pod
extraVolumes:
# - name: pv-claim
#   persistentVolumeClaim:
#     claimName: task-pv-volume
# - name: example
#   configMap:
#     name: example

# -- Extra Volume Mounts for the pulumi-kubernetes-operator pod
extraVolumeMounts:
# - name: test
#   mountPath: /test

extraPorts:
# - containerPort: 9091
#   name: http-extra
#   protocol: TCP

# -- Labels to add to the pulumi-kubernetes-operator pod. default: {}
podLabels: {}

# -- You can configure extra init containers to run within the pulumi-kubernetes-operator pod. default: []
initContainers: []

# -- You can configure extra sidecar containers to run within the pulumi-kubernetes-operator pod. default: []
extraSidecars: []
#  - name: sidecar-example
#    image: busybox
#    command: ["/bin/sh", "-c", "echo hello from sidecar"]

serviceMonitor:
  # -- When set true then use a ServiceMonitor to configure scraping
  enabled: false
  # Set how frequently Prometheus should scrape
  # interval: 30s
  # Set telemetry path
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  # labels:
  # Set timeout for scrape
  # timeout: 10s
  # Set of labels to transfer on the Kubernetes Service onto the target.
  # targetLabels: []
  # metricRelabelings: []
