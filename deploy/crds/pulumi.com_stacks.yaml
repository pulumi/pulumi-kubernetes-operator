---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: stacks.pulumi.com
spec:
  group: pulumi.com
  names:
    kind: Stack
    listKind: StackList
    plural: stacks
    singular: stack
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.lastUpdate.state
      name: State
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Stack is the Schema for the stacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StackSpec defines the desired state of Pulumi Stack being
              managed by this operator.
            properties:
              accessTokenSecret:
                description: '(optional) AccessTokenSecret is the name of a secret
                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:
                  use EnvRefs with a "secret" entry with the key PULUMI_ACCESS_TOKEN
                  instead.'
                type: string
              backend:
                description: '(optional) Backend is an optional backend URL to use
                  for all Pulumi operations.<br/> Examples:<br/> - Pulumi Service:              "https://app.pulumi.com"
                  (default)<br/> - Self-managed Pulumi Service: "https://pulumi.acmecorp.com"
                  <br/> - Local:                       "file://./einstein" <br/> -
                  AWS:                         "s3://<my-pulumi-state-bucket>" <br/>
                  - Azure:                       "azblob://<my-pulumi-state-bucket>"
                  <br/> - GCP:                         "gs://<my-pulumi-state-bucket>"
                  <br/> See: https://www.pulumi.com/docs/intro/concepts/state/'
                type: string
              branch:
                description: (optional) Branch is the branch name to deploy, either
                  the simple or fully qualified ref name, e.g. refs/heads/master.
                  This is mutually exclusive with the Commit setting. Either value
                  needs to be specified. When specified, the operator will periodically
                  poll to check if the branch has any new commits. The frequency of
                  the polling is configurable through ResyncFrequencySeconds, defaulting
                  to every 60 seconds.
                type: string
              commit:
                description: (optional) Commit is the hash of the commit to deploy.
                  If used, HEAD will be in detached mode. This is mutually exclusive
                  with the Branch setting. Either value needs to be specified.
                type: string
              config:
                additionalProperties:
                  type: string
                description: (optional) Config is the configuration for this stack,
                  which can be optionally specified inline. If this is omitted, configuration
                  is assumed to be checked in and taken from the source repository.
                type: object
              continueResyncOnCommitMatch:
                description: (optional) ContinueResyncOnCommitMatch - when true -
                  informs the operator to continue trying to update stacks even if
                  the revision of the source matches. This might be useful in environments
                  where Pulumi programs have dynamic elements for example, calls to
                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults
                  to false, i.e. when a particular revision is successfully run, the
                  operator will not attempt to rerun the program at that revision
                  again.
                type: boolean
              destroyOnFinalize:
                description: (optional) DestroyOnFinalize can be set to true to destroy
                  the stack completely upon deletion of the CRD.
                type: boolean
              envRefs:
                additionalProperties:
                  description: ResourceRef identifies a resource from which information
                    can be loaded. Environment variables, files on the filesystem,
                    Kubernetes secrets and literal strings are currently supported.
                  properties:
                    env:
                      description: Env selects an environment variable set on the
                        operator process
                      properties:
                        name:
                          description: Name of the environment variable
                          type: string
                      required:
                      - name
                      type: object
                    filesystem:
                      description: FileSystem selects a file on the operator's file
                        system
                      properties:
                        path:
                          description: Path on the filesystem to use to load information
                            from.
                          type: string
                      required:
                      - path
                      type: object
                    literal:
                      description: LiteralRef refers to a literal value
                      properties:
                        value:
                          description: Value to load
                          type: string
                      required:
                      - value
                      type: object
                    secret:
                      description: SecretRef refers to a Kubernetes secret
                      properties:
                        key:
                          description: Key within the secret to use.
                          type: string
                        name:
                          description: Name of the secret
                          type: string
                        namespace:
                          description: Namespace where the secret is stored. Deprecated;
                            non-empty values will be considered invalid unless namespace
                            isolation is disabled in the controller.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type:
                      description: 'SelectorType is required and signifies the type
                        of selector. Must be one of: Env, FS, Secret, Literal'
                      type: string
                  required:
                  - type
                  type: object
                description: (optional) EnvRefs is an optional map containing environment
                  variables as keys and stores descriptors to where the variables'
                  values should be loaded from (one of literal, environment variable,
                  file on the filesystem, or Kubernetes secret) as values.
                type: object
              envSecrets:
                description: '(optional) SecretEnvs is an optional array of secret
                  names containing environment variables to set. Deprecated: use EnvRefs
                  instead.'
                items:
                  type: string
                type: array
              envs:
                description: '(optional) Envs is an optional array of config maps
                  containing environment variables to set. Deprecated: use EnvRefs
                  instead.'
                items:
                  type: string
                type: array
              expectNoRefreshChanges:
                description: (optional) ExpectNoRefreshChanges can be set to true
                  if a stack is not expected to have changes during a refresh before
                  the update is run. This could occur, for example, is a resource's
                  state is changing outside of Pulumi (e.g., metadata, timestamps).
                type: boolean
              fluxSource:
                description: FluxSource specifies how to fetch source code from a
                  Flux source object.
                properties:
                  dir:
                    description: Dir gives the subdirectory containing the Pulumi
                      project (i.e., containing Pulumi.yaml) of interest, within the
                      fetched source.
                    type: string
                  sourceRef:
                    properties:
                      apiVersion:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                required:
                - sourceRef
                type: object
              gitAuth:
                description: '(optional) GitAuth allows configuring git authentication
                  options There are 3 different authentication options: * SSH private
                  key (and its optional password) * Personal access token * Basic
                  auth username and password Only one authentication mode will be
                  considered if more than one option is specified, with ssh private
                  key/password preferred first, then personal access token, and finally
                  basic auth credentials.'
                properties:
                  accessToken:
                    description: ResourceRef identifies a resource from which information
                      can be loaded. Environment variables, files on the filesystem,
                      Kubernetes secrets and literal strings are currently supported.
                    properties:
                      env:
                        description: Env selects an environment variable set on the
                          operator process
                        properties:
                          name:
                            description: Name of the environment variable
                            type: string
                        required:
                        - name
                        type: object
                      filesystem:
                        description: FileSystem selects a file on the operator's file
                          system
                        properties:
                          path:
                            description: Path on the filesystem to use to load information
                              from.
                            type: string
                        required:
                        - path
                        type: object
                      literal:
                        description: LiteralRef refers to a literal value
                        properties:
                          value:
                            description: Value to load
                            type: string
                        required:
                        - value
                        type: object
                      secret:
                        description: SecretRef refers to a Kubernetes secret
                        properties:
                          key:
                            description: Key within the secret to use.
                            type: string
                          name:
                            description: Name of the secret
                            type: string
                          namespace:
                            description: Namespace where the secret is stored. Deprecated;
                              non-empty values will be considered invalid unless namespace
                              isolation is disabled in the controller.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      type:
                        description: 'SelectorType is required and signifies the type
                          of selector. Must be one of: Env, FS, Secret, Literal'
                        type: string
                    required:
                    - type
                    type: object
                  basicAuth:
                    description: BasicAuth configures git authentication through basic
                      auth — i.e. username and password. Both UserName and Password
                      are required.
                    properties:
                      password:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                      userName:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - password
                    - userName
                    type: object
                  sshAuth:
                    description: SSHAuth configures ssh-based auth for git authentication.
                      SSHPrivateKey is required but password is optional.
                    properties:
                      password:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                      sshPrivateKey:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - sshPrivateKey
                    type: object
                type: object
              gitAuthSecret:
                description: '(optional) GitAuthSecret is the the name of a secret
                  containing an authentication option for the git repository. There
                  are 3 different authentication options: * Personal access token
                  * SSH private key (and it''s optional password) * Basic auth username
                  and password Only one authentication mode will be considered if
                  more than one option is specified, with ssh private key/password
                  preferred first, then personal access token, and finally basic auth
                  credentials. Deprecated. Use GitAuth instead.'
                type: string
              programRef:
                description: ProgramRef refers to a Program object, to be used as
                  the source for the stack.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              projectRepo:
                description: ProjectRepo is the git source control repository from
                  which we fetch the project code and configuration.
                type: string
              refresh:
                description: (optional) Refresh can be set to true to refresh the
                  stack before it is updated.
                type: boolean
              repoDir:
                description: (optional) RepoDir is the directory to work from in the
                  project's source repository where Pulumi.yaml is located. It is
                  used in case Pulumi.yaml is not in the project source root.
                type: string
              resyncFrequencySeconds:
                description: (optional) ResyncFrequencySeconds when set to a non-zero
                  value, triggers a resync of the stack at the specified frequency
                  even if no changes to the custom-resource are detected. If branch
                  tracking is enabled (branch is non-empty), commit polling will occur
                  at this frequency. The minimal resync frequency supported is 60
                  seconds.
                format: int64
                type: integer
              retryOnUpdateConflict:
                description: (optional) RetryOnUpdateConflict issues a stack update
                  retry reconciliation loop in the event that the update hits a HTTP
                  409 conflict due to another update in progress. This is only recommended
                  if you are sure that the stack updates are idempotent, and if you
                  are willing to accept retry loops until all spawned retries succeed.
                  This will also create a more populated, and randomized activity
                  timeline for the stack in the Pulumi Service.
                type: boolean
              secrets:
                additionalProperties:
                  type: string
                description: '(optional) Secrets is the secret configuration for this
                  stack, which can be optionally specified inline. If this is omitted,
                  secrets configuration is assumed to be checked in and taken from
                  the source repository. Deprecated: use SecretRefs instead.'
                type: object
              secretsProvider:
                description: '(optional) SecretsProvider is used to initialize a Stack
                  with alternative encryption. Examples: - AWS:   "awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1"
                  - Azure: "azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname"
                  - GCP:   "gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY"
                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'
                type: string
              secretsRef:
                additionalProperties:
                  description: ResourceRef identifies a resource from which information
                    can be loaded. Environment variables, files on the filesystem,
                    Kubernetes secrets and literal strings are currently supported.
                  properties:
                    env:
                      description: Env selects an environment variable set on the
                        operator process
                      properties:
                        name:
                          description: Name of the environment variable
                          type: string
                      required:
                      - name
                      type: object
                    filesystem:
                      description: FileSystem selects a file on the operator's file
                        system
                      properties:
                        path:
                          description: Path on the filesystem to use to load information
                            from.
                          type: string
                      required:
                      - path
                      type: object
                    literal:
                      description: LiteralRef refers to a literal value
                      properties:
                        value:
                          description: Value to load
                          type: string
                      required:
                      - value
                      type: object
                    secret:
                      description: SecretRef refers to a Kubernetes secret
                      properties:
                        key:
                          description: Key within the secret to use.
                          type: string
                        name:
                          description: Name of the secret
                          type: string
                        namespace:
                          description: Namespace where the secret is stored. Deprecated;
                            non-empty values will be considered invalid unless namespace
                            isolation is disabled in the controller.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type:
                      description: 'SelectorType is required and signifies the type
                        of selector. Must be one of: Env, FS, Secret, Literal'
                      type: string
                  required:
                  - type
                  type: object
                description: (optional) SecretRefs is the secret configuration for
                  this stack which can be specified through ResourceRef. If this is
                  omitted, secrets configuration is assumed to be checked in and taken
                  from the source repository.
                type: object
              stack:
                description: Stack is the fully qualified name of the stack to deploy
                  (<org>/<stack>).
                type: string
              useLocalStackOnly:
                description: (optional) UseLocalStackOnly can be set to true to prevent
                  the operator from creating stacks that do not exist in the tracking
                  git repo. The default behavior is to create a stack if it doesn't
                  exist.
                type: boolean
            required:
            - stack
            type: object
          status:
            description: StackStatus defines the observed state of Stack
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastUpdate:
                description: LastUpdate contains details of the status of the last
                  update.
                properties:
                  lastAttemptedCommit:
                    description: Last commit attempted
                    type: string
                  lastResyncTime:
                    description: LastResyncTime contains a timestamp for the last
                      time a resync of the stack took place.
                    format: date-time
                    type: string
                  lastSuccessfulCommit:
                    description: Last commit successfully applied
                    type: string
                  permalink:
                    description: Permalink is the Pulumi Console URL of the stack
                      operation.
                    type: string
                  state:
                    description: State is the state of the stack update - one of `succeeded`
                      or `failed`
                    type: string
                type: object
              observedGeneration:
                description: ObservedGeneration records the value of .meta.generation
                  at the point the controller last processed this object
                format: int64
                type: integer
              outputs:
                additionalProperties:
                  x-kubernetes-preserve-unknown-fields: true
                description: Outputs contains the exported stack output variables
                  resulting from a deployment.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Stack is the Schema for the stacks API. Deprecated: Note Stacks
          from pulumi.com/v1alpha1 is deprecated in favor of pulumi.com/v1. It is
          completely backward compatible. Users are strongly encouraged to switch
          to pulumi.com/v1.'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StackSpec defines the desired state of Pulumi Stack being
              managed by this operator.
            properties:
              accessTokenSecret:
                description: '(optional) AccessTokenSecret is the name of a secret
                  containing the PULUMI_ACCESS_TOKEN for Pulumi access. Deprecated:
                  use EnvRefs with a "secret" entry with the key PULUMI_ACCESS_TOKEN
                  instead.'
                type: string
              backend:
                description: '(optional) Backend is an optional backend URL to use
                  for all Pulumi operations.<br/> Examples:<br/> - Pulumi Service:              "https://app.pulumi.com"
                  (default)<br/> - Self-managed Pulumi Service: "https://pulumi.acmecorp.com"
                  <br/> - Local:                       "file://./einstein" <br/> -
                  AWS:                         "s3://<my-pulumi-state-bucket>" <br/>
                  - Azure:                       "azblob://<my-pulumi-state-bucket>"
                  <br/> - GCP:                         "gs://<my-pulumi-state-bucket>"
                  <br/> See: https://www.pulumi.com/docs/intro/concepts/state/'
                type: string
              branch:
                description: (optional) Branch is the branch name to deploy, either
                  the simple or fully qualified ref name, e.g. refs/heads/master.
                  This is mutually exclusive with the Commit setting. Either value
                  needs to be specified. When specified, the operator will periodically
                  poll to check if the branch has any new commits. The frequency of
                  the polling is configurable through ResyncFrequencySeconds, defaulting
                  to every 60 seconds.
                type: string
              commit:
                description: (optional) Commit is the hash of the commit to deploy.
                  If used, HEAD will be in detached mode. This is mutually exclusive
                  with the Branch setting. Either value needs to be specified.
                type: string
              config:
                additionalProperties:
                  type: string
                description: (optional) Config is the configuration for this stack,
                  which can be optionally specified inline. If this is omitted, configuration
                  is assumed to be checked in and taken from the source repository.
                type: object
              continueResyncOnCommitMatch:
                description: (optional) ContinueResyncOnCommitMatch - when true -
                  informs the operator to continue trying to update stacks even if
                  the revision of the source matches. This might be useful in environments
                  where Pulumi programs have dynamic elements for example, calls to
                  internal APIs where GitOps style commit tracking is not sufficient.  Defaults
                  to false, i.e. when a particular revision is successfully run, the
                  operator will not attempt to rerun the program at that revision
                  again.
                type: boolean
              destroyOnFinalize:
                description: (optional) DestroyOnFinalize can be set to true to destroy
                  the stack completely upon deletion of the CRD.
                type: boolean
              envRefs:
                additionalProperties:
                  description: ResourceRef identifies a resource from which information
                    can be loaded. Environment variables, files on the filesystem,
                    Kubernetes secrets and literal strings are currently supported.
                  properties:
                    env:
                      description: Env selects an environment variable set on the
                        operator process
                      properties:
                        name:
                          description: Name of the environment variable
                          type: string
                      required:
                      - name
                      type: object
                    filesystem:
                      description: FileSystem selects a file on the operator's file
                        system
                      properties:
                        path:
                          description: Path on the filesystem to use to load information
                            from.
                          type: string
                      required:
                      - path
                      type: object
                    literal:
                      description: LiteralRef refers to a literal value
                      properties:
                        value:
                          description: Value to load
                          type: string
                      required:
                      - value
                      type: object
                    secret:
                      description: SecretRef refers to a Kubernetes secret
                      properties:
                        key:
                          description: Key within the secret to use.
                          type: string
                        name:
                          description: Name of the secret
                          type: string
                        namespace:
                          description: Namespace where the secret is stored. Deprecated;
                            non-empty values will be considered invalid unless namespace
                            isolation is disabled in the controller.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type:
                      description: 'SelectorType is required and signifies the type
                        of selector. Must be one of: Env, FS, Secret, Literal'
                      type: string
                  required:
                  - type
                  type: object
                description: (optional) EnvRefs is an optional map containing environment
                  variables as keys and stores descriptors to where the variables'
                  values should be loaded from (one of literal, environment variable,
                  file on the filesystem, or Kubernetes secret) as values.
                type: object
              envSecrets:
                description: '(optional) SecretEnvs is an optional array of secret
                  names containing environment variables to set. Deprecated: use EnvRefs
                  instead.'
                items:
                  type: string
                type: array
              envs:
                description: '(optional) Envs is an optional array of config maps
                  containing environment variables to set. Deprecated: use EnvRefs
                  instead.'
                items:
                  type: string
                type: array
              expectNoRefreshChanges:
                description: (optional) ExpectNoRefreshChanges can be set to true
                  if a stack is not expected to have changes during a refresh before
                  the update is run. This could occur, for example, is a resource's
                  state is changing outside of Pulumi (e.g., metadata, timestamps).
                type: boolean
              fluxSource:
                description: FluxSource specifies how to fetch source code from a
                  Flux source object.
                properties:
                  dir:
                    description: Dir gives the subdirectory containing the Pulumi
                      project (i.e., containing Pulumi.yaml) of interest, within the
                      fetched source.
                    type: string
                  sourceRef:
                    properties:
                      apiVersion:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                required:
                - sourceRef
                type: object
              gitAuth:
                description: '(optional) GitAuth allows configuring git authentication
                  options There are 3 different authentication options: * SSH private
                  key (and its optional password) * Personal access token * Basic
                  auth username and password Only one authentication mode will be
                  considered if more than one option is specified, with ssh private
                  key/password preferred first, then personal access token, and finally
                  basic auth credentials.'
                properties:
                  accessToken:
                    description: ResourceRef identifies a resource from which information
                      can be loaded. Environment variables, files on the filesystem,
                      Kubernetes secrets and literal strings are currently supported.
                    properties:
                      env:
                        description: Env selects an environment variable set on the
                          operator process
                        properties:
                          name:
                            description: Name of the environment variable
                            type: string
                        required:
                        - name
                        type: object
                      filesystem:
                        description: FileSystem selects a file on the operator's file
                          system
                        properties:
                          path:
                            description: Path on the filesystem to use to load information
                              from.
                            type: string
                        required:
                        - path
                        type: object
                      literal:
                        description: LiteralRef refers to a literal value
                        properties:
                          value:
                            description: Value to load
                            type: string
                        required:
                        - value
                        type: object
                      secret:
                        description: SecretRef refers to a Kubernetes secret
                        properties:
                          key:
                            description: Key within the secret to use.
                            type: string
                          name:
                            description: Name of the secret
                            type: string
                          namespace:
                            description: Namespace where the secret is stored. Deprecated;
                              non-empty values will be considered invalid unless namespace
                              isolation is disabled in the controller.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      type:
                        description: 'SelectorType is required and signifies the type
                          of selector. Must be one of: Env, FS, Secret, Literal'
                        type: string
                    required:
                    - type
                    type: object
                  basicAuth:
                    description: BasicAuth configures git authentication through basic
                      auth — i.e. username and password. Both UserName and Password
                      are required.
                    properties:
                      password:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                      userName:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - password
                    - userName
                    type: object
                  sshAuth:
                    description: SSHAuth configures ssh-based auth for git authentication.
                      SSHPrivateKey is required but password is optional.
                    properties:
                      password:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                      sshPrivateKey:
                        description: ResourceRef identifies a resource from which
                          information can be loaded. Environment variables, files
                          on the filesystem, Kubernetes secrets and literal strings
                          are currently supported.
                        properties:
                          env:
                            description: Env selects an environment variable set on
                              the operator process
                            properties:
                              name:
                                description: Name of the environment variable
                                type: string
                            required:
                            - name
                            type: object
                          filesystem:
                            description: FileSystem selects a file on the operator's
                              file system
                            properties:
                              path:
                                description: Path on the filesystem to use to load
                                  information from.
                                type: string
                            required:
                            - path
                            type: object
                          literal:
                            description: LiteralRef refers to a literal value
                            properties:
                              value:
                                description: Value to load
                                type: string
                            required:
                            - value
                            type: object
                          secret:
                            description: SecretRef refers to a Kubernetes secret
                            properties:
                              key:
                                description: Key within the secret to use.
                                type: string
                              name:
                                description: Name of the secret
                                type: string
                              namespace:
                                description: Namespace where the secret is stored.
                                  Deprecated; non-empty values will be considered
                                  invalid unless namespace isolation is disabled in
                                  the controller.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: 'SelectorType is required and signifies the
                              type of selector. Must be one of: Env, FS, Secret, Literal'
                            type: string
                        required:
                        - type
                        type: object
                    required:
                    - sshPrivateKey
                    type: object
                type: object
              gitAuthSecret:
                description: '(optional) GitAuthSecret is the the name of a secret
                  containing an authentication option for the git repository. There
                  are 3 different authentication options: * Personal access token
                  * SSH private key (and it''s optional password) * Basic auth username
                  and password Only one authentication mode will be considered if
                  more than one option is specified, with ssh private key/password
                  preferred first, then personal access token, and finally basic auth
                  credentials. Deprecated. Use GitAuth instead.'
                type: string
              programRef:
                description: ProgramRef refers to a Program object, to be used as
                  the source for the stack.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              projectRepo:
                description: ProjectRepo is the git source control repository from
                  which we fetch the project code and configuration.
                type: string
              refresh:
                description: (optional) Refresh can be set to true to refresh the
                  stack before it is updated.
                type: boolean
              repoDir:
                description: (optional) RepoDir is the directory to work from in the
                  project's source repository where Pulumi.yaml is located. It is
                  used in case Pulumi.yaml is not in the project source root.
                type: string
              resyncFrequencySeconds:
                description: (optional) ResyncFrequencySeconds when set to a non-zero
                  value, triggers a resync of the stack at the specified frequency
                  even if no changes to the custom-resource are detected. If branch
                  tracking is enabled (branch is non-empty), commit polling will occur
                  at this frequency. The minimal resync frequency supported is 60
                  seconds.
                format: int64
                type: integer
              retryOnUpdateConflict:
                description: (optional) RetryOnUpdateConflict issues a stack update
                  retry reconciliation loop in the event that the update hits a HTTP
                  409 conflict due to another update in progress. This is only recommended
                  if you are sure that the stack updates are idempotent, and if you
                  are willing to accept retry loops until all spawned retries succeed.
                  This will also create a more populated, and randomized activity
                  timeline for the stack in the Pulumi Service.
                type: boolean
              secrets:
                additionalProperties:
                  type: string
                description: '(optional) Secrets is the secret configuration for this
                  stack, which can be optionally specified inline. If this is omitted,
                  secrets configuration is assumed to be checked in and taken from
                  the source repository. Deprecated: use SecretRefs instead.'
                type: object
              secretsProvider:
                description: '(optional) SecretsProvider is used to initialize a Stack
                  with alternative encryption. Examples: - AWS:   "awskms:///arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34bc-56ef-1234567890ab?region=us-east-1"
                  - Azure: "azurekeyvault://acmecorpvault.vault.azure.net/keys/mykeyname"
                  - GCP:   "gcpkms://projects/MYPROJECT/locations/MYLOCATION/keyRings/MYKEYRING/cryptoKeys/MYKEY"
                  - See: https://www.pulumi.com/docs/intro/concepts/secrets/#initializing-a-stack-with-alternative-encryption'
                type: string
              secretsRef:
                additionalProperties:
                  description: ResourceRef identifies a resource from which information
                    can be loaded. Environment variables, files on the filesystem,
                    Kubernetes secrets and literal strings are currently supported.
                  properties:
                    env:
                      description: Env selects an environment variable set on the
                        operator process
                      properties:
                        name:
                          description: Name of the environment variable
                          type: string
                      required:
                      - name
                      type: object
                    filesystem:
                      description: FileSystem selects a file on the operator's file
                        system
                      properties:
                        path:
                          description: Path on the filesystem to use to load information
                            from.
                          type: string
                      required:
                      - path
                      type: object
                    literal:
                      description: LiteralRef refers to a literal value
                      properties:
                        value:
                          description: Value to load
                          type: string
                      required:
                      - value
                      type: object
                    secret:
                      description: SecretRef refers to a Kubernetes secret
                      properties:
                        key:
                          description: Key within the secret to use.
                          type: string
                        name:
                          description: Name of the secret
                          type: string
                        namespace:
                          description: Namespace where the secret is stored. Deprecated;
                            non-empty values will be considered invalid unless namespace
                            isolation is disabled in the controller.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type:
                      description: 'SelectorType is required and signifies the type
                        of selector. Must be one of: Env, FS, Secret, Literal'
                      type: string
                  required:
                  - type
                  type: object
                description: (optional) SecretRefs is the secret configuration for
                  this stack which can be specified through ResourceRef. If this is
                  omitted, secrets configuration is assumed to be checked in and taken
                  from the source repository.
                type: object
              stack:
                description: Stack is the fully qualified name of the stack to deploy
                  (<org>/<stack>).
                type: string
              useLocalStackOnly:
                description: (optional) UseLocalStackOnly can be set to true to prevent
                  the operator from creating stacks that do not exist in the tracking
                  git repo. The default behavior is to create a stack if it doesn't
                  exist.
                type: boolean
            required:
            - stack
            type: object
          status:
            description: StackStatus defines the observed state of Stack
            properties:
              lastUpdate:
                description: LastUpdate contains details of the status of the last
                  update.
                properties:
                  lastAttemptedCommit:
                    description: Last commit attempted
                    type: string
                  lastResyncTime:
                    description: LastResyncTime contains a timestamp for the last
                      time a resync of the stack took place.
                    format: date-time
                    type: string
                  lastSuccessfulCommit:
                    description: Last commit successfully applied
                    type: string
                  permalink:
                    description: Permalink is the Pulumi Console URL of the stack
                      operation.
                    type: string
                  state:
                    description: State is the state of the stack update - one of `succeeded`
                      or `failed`
                    type: string
                type: object
              outputs:
                additionalProperties:
                  x-kubernetes-preserve-unknown-fields: true
                description: Outputs contains the exported stack output variables
                  resulting from a deployment.
                type: object
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
